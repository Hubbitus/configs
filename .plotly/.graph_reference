{
    "layout": {
        "layoutAttributes": {
            "width": {
                "dflt": 700,
                "description": "Sets the plot's width (in px).",
                "role": "info",
                "valType": "number",
                "min": 10
            },
            "autosize": {
                "values": [
                    true,
                    false,
                    "initial"
                ],
                "description": "Determines whether or not the dimensions of the figure are computed as a function of the display size.",
                "role": "info",
                "valType": "enumerated"
            },
            "plot_bgcolor": {
                "dflt": "#fff",
                "description": "Sets the color of plotting area in-between x and y axes.",
                "role": "style",
                "valType": "color"
            },
            "annotations": {
                "items": {
                    "annotation": {
                        "y": {
                            "description": "Sets the annotation's y position. Note that dates and categories are converted to numbers.",
                            "role": "info",
                            "valType": "number"
                        },
                        "x": {
                            "description": "Sets the annotation's x position. Note that dates and categories are converted to numbers.",
                            "role": "info",
                            "valType": "number"
                        },
                        "bgcolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the background color of the annotation.",
                            "role": "style",
                            "valType": "color"
                        },
                        "arrowsize": {
                            "dflt": 1,
                            "description": "Sets the size (in px) of annotation arrow head.",
                            "role": "style",
                            "valType": "number",
                            "min": 0.3
                        },
                        "xref": {
                            "values": [
                                "paper",
                                "/^x([2-9]|[1-9][0-9]+)?$/"
                            ],
                            "description": "Sets the annotation's x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where 0 (1) corresponds to the left (right) side.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "role": "object",
                        "ay": {
                            "dflt": -30,
                            "description": "Sets the y component of the arrow tail about the arrow head. A positive (negative) component corresponds to an arrow pointing from bottom to top (top to bottom)",
                            "role": "info",
                            "valType": "number"
                        },
                        "align": {
                            "dflt": "center",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ],
                            "description": "Sets the vertical alignment of the `text` with respect to the set `x` and `y` position. Has only an effect if `text` spans more two or more lines (i.e. `text` contains one or more <br> HTML tags).",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "font": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets the annotation text font."
                        },
                        "yref": {
                            "values": [
                                "paper",
                                "/^y([2-9]|[1-9][0-9]+)?$/"
                            ],
                            "description": "Sets the annotation's y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where 0 (1) corresponds to the bottom (top).",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "_deprecated": {
                            "ref": {
                                "description": "Obsolete. Set `xref` and `yref` separately instead.",
                                "role": "info",
                                "valType": "string"
                            }
                        },
                        "text": {
                            "description": "Sets the text associated with this annotation. Plotly uses a subset of HTML tags to do things like newline (<br>), bold (<b></b>), italics (<i></i>), hyperlinks (<a href='...'></a>). Tags <em>, <sup>, <sub> <span> are also supported.",
                            "role": "info",
                            "valType": "string"
                        },
                        "arrowcolor": {
                            "description": "Sets the color of the annotation arrow.",
                            "role": "style",
                            "valType": "color"
                        },
                        "textangle": {
                            "dflt": 0,
                            "description": "Sets the angle at which the `text` is drawn with respect to the horizontal.",
                            "role": "style",
                            "valType": "angle"
                        },
                        "arrowwidth": {
                            "description": "Sets the width (in px) of annotation arrow.",
                            "role": "style",
                            "valType": "number",
                            "min": 0.1
                        },
                        "yanchor": {
                            "dflt": "auto",
                            "values": [
                                "auto",
                                "top",
                                "middle",
                                "bottom"
                            ],
                            "description": "Sets the annotation's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the annotation. For example, if `y` is set to 1, `yref` to *paper* and `yanchor` to *top* then the top-most portion of the annotation lines up with the top-most edge of the plotting area. If *auto*, the anchor is equivalent to *middle* for data-referenced annotations whereas for paper-referenced, the anchor picked corresponds to the closest side.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "opacity": {
                            "role": "style",
                            "dflt": 1,
                            "max": 1,
                            "description": "Sets the opacity of the annotation (text + arrow).",
                            "valType": "number",
                            "min": 0
                        },
                        "borderpad": {
                            "dflt": 1,
                            "description": "Sets the padding (in px) between the `text` and the enclosing border.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "bordercolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the color of the border enclosing the annotation `text`.",
                            "role": "style",
                            "valType": "color"
                        },
                        "xanchor": {
                            "dflt": "auto",
                            "values": [
                                "auto",
                                "left",
                                "center",
                                "right"
                            ],
                            "description": "Sets the annotation's horizontal position anchor This anchor binds the `x` position to the *left*, *center* or *right* of the annotation. For example, if `x` is set to 1, `xref` to *paper* and `xanchor` to *right* then the right-most portion of the annotation lines up with the right-most edge of the plotting area. If *auto*, the anchor is equivalent to *center* for data-referenced annotations whereas for paper-referenced, the anchor picked corresponds to the closest side.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "ax": {
                            "dflt": -10,
                            "description": "Sets the x component of the arrow tail about the arrow head. A positive (negative) component corresponds to an arrow pointing from right to left (left to right)",
                            "role": "info",
                            "valType": "number"
                        },
                        "arrowhead": {
                            "role": "style",
                            "dflt": 1,
                            "max": 8,
                            "description": "Sets the annotation arrow head style.",
                            "valType": "integer",
                            "min": 0
                        },
                        "showarrow": {
                            "dflt": true,
                            "description": "Determines whether or not the annotation is drawn with an arrow. If *true*, `text` is placed near the arrow's tail. If *false*, `text` lines up with the `x` and `y` provided.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "borderwidth": {
                            "dflt": 1,
                            "description": "Sets the width (in px) of the border enclosing the annotation `text`.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        }
                    }
                },
                "role": "object"
            },
            "height": {
                "dflt": 450,
                "description": "Sets the plot's height (in px).",
                "role": "info",
                "valType": "number",
                "min": 10
            },
            "xaxis": {
                "tickwidth": {
                    "dflt": 1,
                    "description": "Sets the tick width (in px).",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "showtickprefix": {
                    "dflt": "all",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "tickangle": {
                    "dflt": "auto",
                    "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                    "role": "style",
                    "valType": "angle"
                },
                "rangemode": {
                    "dflt": "normal",
                    "values": [
                        "normal",
                        "tozero",
                        "nonnegative"
                    ],
                    "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "showticksuffix": {
                    "dflt": "all",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "description": "Same as `showtickprefix` but for tick suffixes.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "fixedrange": {
                    "dflt": false,
                    "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                    "role": "info",
                    "valType": "boolean"
                },
                "exponentformat": {
                    "dflt": "B",
                    "values": [
                        "none",
                        "e",
                        "E",
                        "power",
                        "SI",
                        "B"
                    ],
                    "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "tick0": {
                    "dflt": 0,
                    "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                    "role": "style",
                    "valType": "number"
                },
                "autorange": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "reversed"
                    ],
                    "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "gridcolor": {
                    "dflt": "#eee",
                    "description": "Sets the color of the grid lines.",
                    "role": "style",
                    "valType": "color"
                },
                "ticklen": {
                    "dflt": 5,
                    "description": "Sets the tick length (in px).",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "title": {
                    "description": "Sets the title of this axis.",
                    "role": "info",
                    "valType": "string"
                },
                "tickmode": {
                    "values": [
                        "auto",
                        "linear",
                        "array"
                    ],
                    "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "range": {
                    "items": [
                        {
                            "valType": "number"
                        },
                        {
                            "valType": "number"
                        }
                    ],
                    "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                    "role": "info",
                    "valType": "info_array"
                },
                "hoverformat": {
                    "dflt": "",
                    "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                    "role": "style",
                    "valType": "string"
                },
                "ticktext": {
                    "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                    "role": "data",
                    "valType": "data_array"
                },
                "tickcolor": {
                    "dflt": "#444",
                    "description": "Sets the tick color.",
                    "role": "style",
                    "valType": "color"
                },
                "linecolor": {
                    "dflt": "#444",
                    "description": "Sets the axis line color.",
                    "role": "style",
                    "valType": "color"
                },
                "nticks": {
                    "dflt": 0,
                    "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                    "role": "style",
                    "valType": "integer",
                    "min": 0
                },
                "mirror": {
                    "dflt": false,
                    "values": [
                        true,
                        "ticks",
                        false,
                        "all",
                        "allticks"
                    ],
                    "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "tickfont": {
                    "color": {
                        "role": "style",
                        "valType": "color"
                    },
                    "family": {
                        "noBlank": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "size": {
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "description": "Sets the tick font."
                },
                "tickvalssrc": {
                    "description": "Sets the source reference on plot.ly for  tickvals .",
                    "role": "info",
                    "valType": "string"
                },
                "_deprecated": {
                    "autotick": {
                        "description": "Obsolete. Set `tickmode` to *auto* for old `autotick` *true* behavior. Set `tickmode` to *linear* for `autotick` *false*.",
                        "role": "info",
                        "valType": "boolean"
                    }
                },
                "overlaying": {
                    "values": [
                        "free",
                        "/^x([2-9]|[1-9][0-9]+)?$/",
                        "/^y([2-9]|[1-9][0-9]+)?$/"
                    ],
                    "description": "If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "_isSubplotObj": true,
                "ticks": {
                    "values": [
                        "outside",
                        "inside",
                        ""
                    ],
                    "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "gridwidth": {
                    "dflt": 1,
                    "description": "Sets the width (in px) of the grid lines.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "showticklabels": {
                    "dflt": true,
                    "description": "Determines whether or not the tick labels are drawn.",
                    "role": "style",
                    "valType": "boolean"
                },
                "position": {
                    "role": "style",
                    "dflt": 0,
                    "max": 1,
                    "description": "Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*.",
                    "valType": "number",
                    "min": 0
                },
                "showexponent": {
                    "dflt": "all",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "showgrid": {
                    "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                    "role": "style",
                    "valType": "boolean"
                },
                "ticktextsrc": {
                    "description": "Sets the source reference on plot.ly for  ticktext .",
                    "role": "info",
                    "valType": "string"
                },
                "side": {
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "description": "Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "zerolinewidth": {
                    "dflt": 1,
                    "description": "Sets the width (in px) of the zero line.",
                    "role": "style",
                    "valType": "number"
                },
                "role": "object",
                "tickprefix": {
                    "dflt": "",
                    "description": "Sets a tick label prefix.",
                    "role": "style",
                    "valType": "string"
                },
                "type": {
                    "dflt": "-",
                    "values": [
                        "-",
                        "linear",
                        "log",
                        "date",
                        "category"
                    ],
                    "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "linewidth": {
                    "dflt": 1,
                    "description": "Sets the width (in px) of the axis line.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "tickformat": {
                    "dflt": "",
                    "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                    "role": "style",
                    "valType": "string"
                },
                "dtick": {
                    "dflt": 1,
                    "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                    "role": "style",
                    "valType": "any"
                },
                "zerolinecolor": {
                    "dflt": "#444",
                    "description": "Sets the line color of the zero line.",
                    "role": "style",
                    "valType": "color"
                },
                "showline": {
                    "dflt": false,
                    "description": "Determines whether or not a line bounding this axis is drawn.",
                    "role": "style",
                    "valType": "boolean"
                },
                "domain": {
                    "dflt": [
                        0,
                        1
                    ],
                    "items": [
                        {
                            "max": 1,
                            "valType": "number",
                            "min": 0
                        },
                        {
                            "max": 1,
                            "valType": "number",
                            "min": 0
                        }
                    ],
                    "description": "Sets the domain of this axis (in plot fraction).",
                    "role": "info",
                    "valType": "info_array"
                },
                "ticksuffix": {
                    "dflt": "",
                    "description": "Sets a tick label suffix.",
                    "role": "style",
                    "valType": "string"
                },
                "zeroline": {
                    "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                    "role": "style",
                    "valType": "boolean"
                },
                "titlefont": {
                    "color": {
                        "role": "style",
                        "valType": "color"
                    },
                    "family": {
                        "noBlank": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "size": {
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "description": "Sets this axis' title font."
                },
                "tickvals": {
                    "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                    "role": "data",
                    "valType": "data_array"
                },
                "anchor": {
                    "values": [
                        "free",
                        "/^x([2-9]|[1-9][0-9]+)?$/",
                        "/^y([2-9]|[1-9][0-9]+)?$/"
                    ],
                    "description": "If set to an opposite-letter axis id (e.g. `xaxis2`, `yaxis`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis' position is determined by `position`.",
                    "role": "info",
                    "valType": "enumerated"
                }
            },
            "radialaxis": {
                "tickcolor": {
                    "description": "Sets the color of the tick lines on this radial axis.",
                    "role": "style",
                    "valType": "color"
                },
                "endpadding": {
                    "role": "style",
                    "valType": "number"
                },
                "showline": {
                    "description": "Determines whether or not the line bounding this radial axis will be shown on the figure.",
                    "role": "style",
                    "valType": "boolean"
                },
                "domain": {
                    "dflt": [
                        0,
                        1
                    ],
                    "items": [
                        {
                            "max": 1,
                            "valType": "number",
                            "min": 0
                        },
                        {
                            "max": 1,
                            "valType": "number",
                            "min": 0
                        }
                    ],
                    "description": "Polar chart subplots are not supported yet. This key has currently no effect.",
                    "role": "info",
                    "valType": "info_array"
                },
                "tickorientation": {
                    "values": [
                        "horizontal",
                        "vertical"
                    ],
                    "description": "Sets the orientation (from the paper perspective) of the radial axis tick labels.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "ticksuffix": {
                    "description": "Sets the length of the tick lines on this radial axis.",
                    "role": "style",
                    "valType": "string"
                },
                "ticklen": {
                    "description": "Sets the length of the tick lines on this radial axis.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "role": "object",
                "showticklabels": {
                    "description": "Determines whether or not the radial axis ticks will feature tick labels.",
                    "role": "style",
                    "valType": "boolean"
                },
                "range": {
                    "items": [
                        {
                            "valType": "number"
                        },
                        {
                            "valType": "number"
                        }
                    ],
                    "description": "Defines the start and end point of this radial axis.",
                    "role": "info",
                    "valType": "info_array"
                },
                "orientation": {
                    "description": "Sets the orientation (an angle with respect to the origin) of the radial axis.",
                    "role": "style",
                    "valType": "number"
                },
                "visible": {
                    "description": "Determines whether or not this axis will be visible.",
                    "role": "info",
                    "valType": "boolean"
                }
            },
            "smith": {
                "dflt": false,
                "values": [
                    false
                ],
                "role": "info",
                "valType": "enumerated"
            },
            "titlefont": {
                "color": {
                    "role": "style",
                    "valType": "color"
                },
                "family": {
                    "noBlank": true,
                    "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                    "role": "style",
                    "valType": "string",
                    "strict": true
                },
                "size": {
                    "role": "style",
                    "valType": "number",
                    "min": 1
                },
                "role": "object",
                "description": "Sets the title font."
            },
            "title": {
                "dflt": "Click to enter Plot title",
                "description": "Sets the plot's title.",
                "role": "info",
                "valType": "string"
            },
            "angularaxis": {
                "ticksuffix": {
                    "description": "Sets the length of the tick lines on this angular axis.",
                    "role": "style",
                    "valType": "string"
                },
                "tickcolor": {
                    "description": "Sets the color of the tick lines on this angular axis.",
                    "role": "style",
                    "valType": "color"
                },
                "ticklen": {
                    "description": "Sets the length of the tick lines on this angular axis.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "role": "object",
                "showticklabels": {
                    "description": "Determines whether or not the angular axis ticks will feature tick labels.",
                    "role": "style",
                    "valType": "boolean"
                },
                "endpadding": {
                    "role": "style",
                    "valType": "number"
                },
                "range": {
                    "items": [
                        {
                            "dflt": 0,
                            "valType": "number"
                        },
                        {
                            "dflt": 360,
                            "valType": "number"
                        }
                    ],
                    "description": "Defines the start and end point of this angular axis.",
                    "role": "info",
                    "valType": "info_array"
                },
                "domain": {
                    "dflt": [
                        0,
                        1
                    ],
                    "items": [
                        {
                            "max": 1,
                            "valType": "number",
                            "min": 0
                        },
                        {
                            "max": 1,
                            "valType": "number",
                            "min": 0
                        }
                    ],
                    "description": "Polar chart subplots are not supported yet. This key has currently no effect.",
                    "role": "info",
                    "valType": "info_array"
                },
                "showline": {
                    "description": "Determines whether or not the line bounding this angular axis will be shown on the figure.",
                    "role": "style",
                    "valType": "boolean"
                },
                "visible": {
                    "description": "Determines whether or not this axis will be visible.",
                    "role": "info",
                    "valType": "boolean"
                },
                "tickorientation": {
                    "values": [
                        "horizontal",
                        "vertical"
                    ],
                    "description": "Sets the orientation (from the paper perspective) of the angular axis tick labels.",
                    "role": "style",
                    "valType": "enumerated"
                }
            },
            "direction": {
                "values": [
                    "clockwise",
                    "counterclockwise"
                ],
                "description": "For polar plots only. Sets the direction corresponding to positive angles.",
                "role": "info",
                "valType": "enumerated"
            },
            "font": {
                "color": {
                    "dflt": "#444",
                    "role": "style",
                    "valType": "color"
                },
                "family": {
                    "noBlank": true,
                    "role": "style",
                    "dflt": "\"Open Sans\", verdana, arial, sans-serif",
                    "strict": true,
                    "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                    "valType": "string"
                },
                "size": {
                    "dflt": 12,
                    "role": "style",
                    "valType": "number",
                    "min": 1
                },
                "role": "object",
                "description": "Sets the global font. Note that fonts used in traces and other layout components inherit from the global font."
            },
            "separators": {
                "dflt": ".,",
                "description": "Sets the decimal and thousand separators. For example, *. * puts a '.' before decimals and a space between thousands.",
                "role": "style",
                "valType": "string"
            },
            "geo": {
                "showframe": {
                    "description": "Sets whether or not a frame is drawn around the map.",
                    "role": "info",
                    "valType": "boolean"
                },
                "riverwidth": {
                    "dflt": 1,
                    "description": "Sets the stroke width (in px) of the rivers.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "coastlinewidth": {
                    "dflt": 1,
                    "description": "Sets the coastline stroke width (in px).",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "oceancolor": {
                    "dflt": "#3399FF",
                    "description": "Sets the ocean color",
                    "role": "style",
                    "valType": "color"
                },
                "landcolor": {
                    "dflt": "#F0DC82",
                    "description": "Sets the land mass color.",
                    "role": "style",
                    "valType": "color"
                },
                "subunitcolor": {
                    "dflt": "#444",
                    "description": "Sets the color of the subunits boundaries.",
                    "role": "style",
                    "valType": "color"
                },
                "scope": {
                    "dflt": "world",
                    "values": [
                        "world",
                        "usa",
                        "europe",
                        "asia",
                        "africa",
                        "north america",
                        "south america"
                    ],
                    "description": "Set the scope of the map.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "bgcolor": {
                    "dflt": "#fff",
                    "description": "Set the background color of the map",
                    "role": "style",
                    "valType": "color"
                },
                "projection": {
                    "parallels": {
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "description": "For conic projection types only. Sets the parallels (tangent, secant) where the cone intersects the sphere.",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "scale": {
                        "role": "info",
                        "dflt": 1,
                        "max": 10,
                        "description": "Zooms in or out on the map view.",
                        "valType": "number",
                        "min": 0
                    },
                    "role": "object",
                    "rotation": {
                        "roll": {
                            "description": "Roll the map (in degrees) For example, a roll of *180* makes the map appear upside down.",
                            "role": "info",
                            "valType": "number"
                        },
                        "lat": {
                            "description": "Rotates the map along meridians (in degrees North).",
                            "role": "info",
                            "valType": "number"
                        },
                        "role": "object",
                        "lon": {
                            "description": "Rotates the map along parallels (in degrees East).",
                            "role": "info",
                            "valType": "number"
                        }
                    },
                    "type": {
                        "values": [
                            "equirectangular",
                            "mercator",
                            "orthographic",
                            "natural earth",
                            "kavrayskiy7",
                            "miller",
                            "robinson",
                            "eckert4",
                            "azimuthal equal area",
                            "azimuthal equidistant",
                            "conic equal area",
                            "conic conformal",
                            "conic equidistant",
                            "gnomonic",
                            "stereographic",
                            "mollweide",
                            "hammer",
                            "transverse mercator",
                            "albers usa"
                        ],
                        "description": "Sets the projection type.",
                        "role": "info",
                        "valType": "enumerated"
                    }
                },
                "rivercolor": {
                    "dflt": "#3399FF",
                    "description": "Sets color of the rivers.",
                    "role": "style",
                    "valType": "color"
                },
                "role": "object",
                "countrycolor": {
                    "dflt": "#444",
                    "description": "Sets line color of the country boundaries.",
                    "role": "style",
                    "valType": "color"
                },
                "subunitwidth": {
                    "dflt": 1,
                    "description": "Sets the stroke width (in px) of the subunits boundaries.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "showcoastlines": {
                    "description": "Sets whether or not the coastlines are drawn.",
                    "role": "info",
                    "valType": "boolean"
                },
                "framecolor": {
                    "dflt": "#444",
                    "description": "Sets the color the frame.",
                    "role": "style",
                    "valType": "color"
                },
                "showland": {
                    "dflt": false,
                    "description": "Sets whether or not land masses are filled in color.",
                    "role": "info",
                    "valType": "boolean"
                },
                "showlakes": {
                    "dflt": false,
                    "description": "Sets whether or not lakes are drawn.",
                    "role": "info",
                    "valType": "boolean"
                },
                "domain": {
                    "y": {
                        "dflt": [
                            0,
                            1
                        ],
                        "items": [
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            },
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            }
                        ],
                        "description": "Sets the vertical domain of this map (in plot fraction).",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "role": "object",
                    "x": {
                        "dflt": [
                            0,
                            1
                        ],
                        "items": [
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            },
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            }
                        ],
                        "description": "Sets the horizontal domain of this map (in plot fraction).",
                        "role": "info",
                        "valType": "info_array"
                    }
                },
                "countrywidth": {
                    "dflt": 1,
                    "description": "Sets line width (in px) of the country boundaries.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "showrivers": {
                    "dflt": false,
                    "description": "Sets whether or not rivers are drawn.",
                    "role": "info",
                    "valType": "boolean"
                },
                "lataxis": {
                    "showgrid": {
                        "dflt": false,
                        "description": "Sets whether or not graticule are shown on the map.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "gridwidth": {
                        "dflt": 1,
                        "description": "Sets the graticule's stroke width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "dtick": {
                        "description": "Sets the graticule's longitude/latitude tick step.",
                        "role": "info",
                        "valType": "number"
                    },
                    "role": "object",
                    "range": {
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "description": "Sets the range of this axis (in degrees).",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "tick0": {
                        "description": "Sets the graticule's starting tick longitude/latitude.",
                        "role": "info",
                        "valType": "number"
                    },
                    "gridcolor": {
                        "dflt": "#eee",
                        "description": "Sets the graticule's stroke color.",
                        "role": "style",
                        "valType": "color"
                    }
                },
                "lakecolor": {
                    "dflt": "#3399FF",
                    "description": "Sets the color of the lakes.",
                    "role": "style",
                    "valType": "color"
                },
                "showcountries": {
                    "description": "Sets whether or not country boundaries are drawn.",
                    "role": "info",
                    "valType": "boolean"
                },
                "showsubunits": {
                    "description": "Sets whether or not boundaries of subunits within countries (e.g. states, provinces) are drawn.",
                    "role": "info",
                    "valType": "boolean"
                },
                "framewidth": {
                    "dflt": 1,
                    "description": "Sets the stroke width (in px) of the frame.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "coastlinecolor": {
                    "dflt": "#444",
                    "description": "Sets the coastline color.",
                    "role": "style",
                    "valType": "color"
                },
                "lonaxis": {
                    "showgrid": {
                        "dflt": false,
                        "description": "Sets whether or not graticule are shown on the map.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "gridwidth": {
                        "dflt": 1,
                        "description": "Sets the graticule's stroke width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "dtick": {
                        "description": "Sets the graticule's longitude/latitude tick step.",
                        "role": "info",
                        "valType": "number"
                    },
                    "role": "object",
                    "range": {
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "description": "Sets the range of this axis (in degrees).",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "tick0": {
                        "description": "Sets the graticule's starting tick longitude/latitude.",
                        "role": "info",
                        "valType": "number"
                    },
                    "gridcolor": {
                        "dflt": "#eee",
                        "description": "Sets the graticule's stroke color.",
                        "role": "style",
                        "valType": "color"
                    }
                },
                "_isSubplotObj": true,
                "resolution": {
                    "values": [
                        110,
                        50
                    ],
                    "coerceNumber": true,
                    "description": "Sets the resolution of the base layers. The values have units of km/mm e.g. 110 corresponds to a scale ratio of 1:110,000,000.",
                    "dflt": 110,
                    "valType": "enumerated",
                    "role": "info"
                },
                "showocean": {
                    "dflt": false,
                    "description": "Sets whether or not oceans are filled in color.",
                    "role": "info",
                    "valType": "boolean"
                }
            },
            "scene": {
                "dragmode": {
                    "dflt": "turntable",
                    "values": [
                        "orbit",
                        "turntable",
                        "zoom",
                        "pan"
                    ],
                    "description": "Determines the mode of drag interactions for this scene.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "aspectratio": {
                    "y": {
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "z": {
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "role": "object",
                    "description": "Sets this scene's axis aspectratio.",
                    "x": {
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "xaxis": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "fixedrange": {
                        "dflt": false,
                        "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "autorange": {
                        "dflt": true,
                        "values": [
                            true,
                            false,
                            "reversed"
                        ],
                        "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "gridcolor": {
                        "dflt": "rgb(204, 204, 204)",
                        "description": "Sets the color of the grid lines.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "title": {
                        "description": "Sets the title of this axis.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "range": {
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "hoverformat": {
                        "dflt": "",
                        "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "linecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "rangemode": {
                        "dflt": "normal",
                        "values": [
                            "normal",
                            "tozero",
                            "nonnegative"
                        ],
                        "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "type": {
                        "dflt": "-",
                        "values": [
                            "-",
                            "linear",
                            "log",
                            "date",
                            "category"
                        ],
                        "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this axis' title font."
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "gridwidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the grid lines.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "zerolinecolor": {
                        "dflt": "#444",
                        "description": "Sets the line color of the zero line.",
                        "role": "style",
                        "valType": "color"
                    },
                    "spikethickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the spikes.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showgrid": {
                        "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "zerolinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the zero line.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "mirror": {
                        "dflt": false,
                        "values": [
                            true,
                            "ticks",
                            false,
                            "all",
                            "allticks"
                        ],
                        "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "linewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticks": {
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "showbackground": {
                        "dflt": false,
                        "description": "Sets whether or not this axis' wall has a background color.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "showaxeslabels": {
                        "dflt": true,
                        "description": "Sets whether or not this axis is labeled",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "spikesides": {
                        "dflt": true,
                        "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "showline": {
                        "dflt": false,
                        "description": "Determines whether or not a line bounding this axis is drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "zeroline": {
                        "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "showspikes": {
                        "dflt": true,
                        "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "backgroundcolor": {
                        "dflt": "rgba(204, 204, 204, 0.5)",
                        "description": "Sets the background color of this axis' wall.",
                        "role": "style",
                        "valType": "color"
                    },
                    "spikecolor": {
                        "dflt": "rgb(0,0,0)",
                        "description": "Sets the color of the spikes.",
                        "role": "style",
                        "valType": "color"
                    }
                },
                "domain": {
                    "y": {
                        "dflt": [
                            0,
                            1
                        ],
                        "items": [
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            },
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            }
                        ],
                        "description": "Sets the vertical domain of this scene (in plot fraction).",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "role": "object",
                    "x": {
                        "dflt": [
                            0,
                            1
                        ],
                        "items": [
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            },
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            }
                        ],
                        "description": "Sets the horizontal domain of this scene (in plot fraction).",
                        "role": "info",
                        "valType": "info_array"
                    }
                },
                "hovermode": {
                    "dflt": "closest",
                    "values": [
                        "closest",
                        false
                    ],
                    "description": "Determines the mode of hover interactions for this scene.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "bgcolor": {
                    "dflt": "rgba(0,0,0,0)",
                    "role": "style",
                    "valType": "color"
                },
                "camera": {
                    "eye": {
                        "y": {
                            "dflt": 1.25,
                            "role": "info",
                            "valType": "number"
                        },
                        "z": {
                            "dflt": 1.25,
                            "role": "info",
                            "valType": "number"
                        },
                        "role": "object",
                        "description": "Sets the (x,y,z) components of the 'eye' camera vector. This vector determines the view point about the origin of this scene.",
                        "x": {
                            "dflt": 1.25,
                            "role": "info",
                            "valType": "number"
                        }
                    },
                    "up": {
                        "y": {
                            "dflt": 0,
                            "role": "info",
                            "valType": "number"
                        },
                        "z": {
                            "dflt": 1,
                            "role": "info",
                            "valType": "number"
                        },
                        "role": "object",
                        "description": "Sets the (x,y,z) components of the 'up' camera vector. This vector determines the up direction of this scene with respect to the page. The default is *{x: 0, y: 0, z: 1}* which means that the z axis points up.",
                        "x": {
                            "dflt": 0,
                            "role": "info",
                            "valType": "number"
                        }
                    },
                    "role": "object",
                    "center": {
                        "y": {
                            "dflt": 0,
                            "role": "info",
                            "valType": "number"
                        },
                        "z": {
                            "dflt": 0,
                            "role": "info",
                            "valType": "number"
                        },
                        "role": "object",
                        "description": "Sets the (x,y,z) components of the 'center' camera vector This vector determines the translation (x,y,z) space about the center of this scene. By default, there is no such translation.",
                        "x": {
                            "dflt": 0,
                            "role": "info",
                            "valType": "number"
                        }
                    }
                },
                "role": "object",
                "yaxis": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "fixedrange": {
                        "dflt": false,
                        "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "autorange": {
                        "dflt": true,
                        "values": [
                            true,
                            false,
                            "reversed"
                        ],
                        "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "gridcolor": {
                        "dflt": "rgb(204, 204, 204)",
                        "description": "Sets the color of the grid lines.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "title": {
                        "description": "Sets the title of this axis.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "range": {
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "hoverformat": {
                        "dflt": "",
                        "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "linecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "rangemode": {
                        "dflt": "normal",
                        "values": [
                            "normal",
                            "tozero",
                            "nonnegative"
                        ],
                        "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "type": {
                        "dflt": "-",
                        "values": [
                            "-",
                            "linear",
                            "log",
                            "date",
                            "category"
                        ],
                        "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this axis' title font."
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "gridwidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the grid lines.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "zerolinecolor": {
                        "dflt": "#444",
                        "description": "Sets the line color of the zero line.",
                        "role": "style",
                        "valType": "color"
                    },
                    "spikethickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the spikes.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showgrid": {
                        "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "zerolinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the zero line.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "mirror": {
                        "dflt": false,
                        "values": [
                            true,
                            "ticks",
                            false,
                            "all",
                            "allticks"
                        ],
                        "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "linewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticks": {
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "showbackground": {
                        "dflt": false,
                        "description": "Sets whether or not this axis' wall has a background color.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "showaxeslabels": {
                        "dflt": true,
                        "description": "Sets whether or not this axis is labeled",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "spikesides": {
                        "dflt": true,
                        "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "showline": {
                        "dflt": false,
                        "description": "Determines whether or not a line bounding this axis is drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "zeroline": {
                        "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "showspikes": {
                        "dflt": true,
                        "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "backgroundcolor": {
                        "dflt": "rgba(204, 204, 204, 0.5)",
                        "description": "Sets the background color of this axis' wall.",
                        "role": "style",
                        "valType": "color"
                    },
                    "spikecolor": {
                        "dflt": "rgb(0,0,0)",
                        "description": "Sets the color of the spikes.",
                        "role": "style",
                        "valType": "color"
                    }
                },
                "zaxis": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "fixedrange": {
                        "dflt": false,
                        "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "autorange": {
                        "dflt": true,
                        "values": [
                            true,
                            false,
                            "reversed"
                        ],
                        "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "gridcolor": {
                        "dflt": "rgb(204, 204, 204)",
                        "description": "Sets the color of the grid lines.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "title": {
                        "description": "Sets the title of this axis.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "range": {
                        "items": [
                            {
                                "valType": "number"
                            },
                            {
                                "valType": "number"
                            }
                        ],
                        "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "hoverformat": {
                        "dflt": "",
                        "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "linecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "rangemode": {
                        "dflt": "normal",
                        "values": [
                            "normal",
                            "tozero",
                            "nonnegative"
                        ],
                        "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "type": {
                        "dflt": "-",
                        "values": [
                            "-",
                            "linear",
                            "log",
                            "date",
                            "category"
                        ],
                        "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this axis' title font."
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "gridwidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the grid lines.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "zerolinecolor": {
                        "dflt": "#444",
                        "description": "Sets the line color of the zero line.",
                        "role": "style",
                        "valType": "color"
                    },
                    "spikethickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the spikes.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showgrid": {
                        "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "zerolinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the zero line.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "mirror": {
                        "dflt": false,
                        "values": [
                            true,
                            "ticks",
                            false,
                            "all",
                            "allticks"
                        ],
                        "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "linewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticks": {
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "showbackground": {
                        "dflt": false,
                        "description": "Sets whether or not this axis' wall has a background color.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "showaxeslabels": {
                        "dflt": true,
                        "description": "Sets whether or not this axis is labeled",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "spikesides": {
                        "dflt": true,
                        "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "showline": {
                        "dflt": false,
                        "description": "Determines whether or not a line bounding this axis is drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "zeroline": {
                        "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "showspikes": {
                        "dflt": true,
                        "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "backgroundcolor": {
                        "dflt": "rgba(204, 204, 204, 0.5)",
                        "description": "Sets the background color of this axis' wall.",
                        "role": "style",
                        "valType": "color"
                    },
                    "spikecolor": {
                        "dflt": "rgb(0,0,0)",
                        "description": "Sets the color of the spikes.",
                        "role": "style",
                        "valType": "color"
                    }
                },
                "aspectmode": {
                    "dflt": "auto",
                    "values": [
                        "auto",
                        "cube",
                        "data",
                        "manual"
                    ],
                    "description": "If *cube*, this scene's axes are drawn as a cube, regardless of the axes' ranges. If *data*, this scene's axes are drawn in proportion with the axes' ranges. If *manual*, this scene's axes are drawn in proportion with the input of *aspectratio* (the default behavior if *aspectratio* is provided). If *auto*, this scene's axes are drawn using the results of *data* except when one axis is more than four times the size of the two others, where in that case the results of *cube* are used.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "_isSubplotObj": true,
                "_deprecated": {
                    "cameraposition": {
                        "description": "Obsolete. Use `camera` instead.",
                        "role": "info",
                        "valType": "info_array"
                    }
                }
            },
            "dragmode": {
                "dflt": "zoom",
                "values": [
                    "zoom",
                    "pan",
                    "select",
                    "lasso",
                    "orbit",
                    "turntable"
                ],
                "description": "Determines the mode of drag interactions. *select* and *lasso* apply only to scatter traces with markers or text. *orbit* and *turntable* apply only to 3D scenes.",
                "role": "info",
                "valType": "enumerated"
            },
            "showlegend": {
                "description": "Determines whether or not a legend is drawn.",
                "role": "info",
                "valType": "boolean"
            },
            "shapes": {
                "items": {
                    "shape": {
                        "fillcolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the color filling the shape's interior.",
                            "role": "info",
                            "valType": "color"
                        },
                        "path": {
                            "description": "For `type` *path* - a valid SVG path but with the pixel values replaced by data values. There are a few restrictions / quirks only absolute instructions, not relative. So the allowed segments are: M, L, H, V, Q, C, T, S, and Z arcs (A) are not allowed because radius rx and ry are relative. In the future we could consider supporting relative commands, but we would have to decide on how to handle date and log axes. Note that even as is, Q and C Bezier paths that are smooth on linear axes may not be smooth on log, and vice versa. no chained \"polybezier\" commands - specify the segment type for each one. On category axes, values are numbers scaled to the serial numbers of categories because using the categories themselves there would be no way to describe fractional positions On data axes: because space and T are both normal components of path strings, we can't use either to separate date from time parts. Therefore we'll use underscore for this purpose: 2015-02-21_13:45:56.789",
                            "role": "info",
                            "valType": "string"
                        },
                        "type": {
                            "values": [
                                "circle",
                                "rect",
                                "path",
                                "line"
                            ],
                            "description": "Specifies the shape type to be drawn. If *line*, a line is drawn from (`x0`,`y0`) to (`x1`,`y1`) If *circle*, a circle is drawn from ((`x0`+`x1`)/2, (`y0`+`y1`)/2)) with radius (|(`x0`+`x1`)/2 - `x0`|, |(`y0`+`y1`)/2 -`y0`)|) If *rect*, a rectangle is drawn linking (`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`), (`x0`,`y1`), (`x0`,`y0`) If *path*, draw a custom SVG path using `path`.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "x0": {
                            "description": "Sets the shape's starting x position. See `type` for more info.",
                            "role": "info",
                            "valType": "any"
                        },
                        "opacity": {
                            "role": "info",
                            "dflt": 1,
                            "max": 1,
                            "description": "Sets the opacity of the shape.",
                            "valType": "number",
                            "min": 0
                        },
                        "xref": {
                            "values": [
                                "paper",
                                "/^x([2-9]|[1-9][0-9]+)?$/"
                            ],
                            "description": "Sets the shape's x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where *0* (*1*) corresponds to the left (right) side.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "role": "object",
                        "x1": {
                            "description": "Sets the shape's end x position. See `type` for more info.",
                            "role": "info",
                            "valType": "any"
                        },
                        "y0": {
                            "description": "Sets the shape's starting y position. See `type` for more info.",
                            "role": "info",
                            "valType": "any"
                        },
                        "yref": {
                            "values": [
                                "paper",
                                "/^y([2-9]|[1-9][0-9]+)?$/"
                            ],
                            "description": "Sets the annotation's y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where *0* (*1*) corresponds to the bottom (top).",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "line": {
                            "color": {
                                "description": "Sets the line color.",
                                "role": "style",
                                "valType": "color"
                            },
                            "width": {
                                "dflt": 2,
                                "description": "Sets the line width (in px).",
                                "role": "style",
                                "valType": "number",
                                "min": 0
                            },
                            "dash": {
                                "dflt": "solid",
                                "values": [
                                    "solid",
                                    "dot",
                                    "dash",
                                    "longdash",
                                    "dashdot",
                                    "longdashdot"
                                ],
                                "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                                "role": "style",
                                "valType": "string"
                            },
                            "role": "object"
                        },
                        "y1": {
                            "description": "Sets the shape's end y position. See `type` for more info.",
                            "role": "info",
                            "valType": "any"
                        }
                    }
                },
                "role": "object"
            },
            "paper_bgcolor": {
                "dflt": "#fff",
                "description": "Sets the color of paper where the graph is drawn.",
                "role": "style",
                "valType": "color"
            },
            "hovermode": {
                "values": [
                    "x",
                    "y",
                    "closest",
                    false
                ],
                "description": "Determines the mode of hover interactions.",
                "role": "info",
                "valType": "enumerated"
            },
            "legend": {
                "tracegroupgap": {
                    "dflt": 10,
                    "description": "Sets the amount of vertical space (in px) between legend groups.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "traceorder": {
                    "flags": [
                        "reversed",
                        "grouped"
                    ],
                    "description": "Determines the order at which the legend items are displayed. If *normal*, the items are displayed top-to-bottom in the same order as the input data. If *reversed*, the items are displayed in the opposite order as *normal*. If *grouped*, the items are displayed in groups (when a trace `legendgroup` is provided). if *grouped+reversed*, the items are displayed in the opposite order as *grouped*.",
                    "extras": [
                        "normal"
                    ],
                    "role": "style",
                    "valType": "flaglist"
                },
                "bordercolor": {
                    "dflt": "#444",
                    "description": "Sets the color of the border enclosing the legend.",
                    "role": "style",
                    "valType": "color"
                },
                "y": {
                    "role": "style",
                    "dflt": 1,
                    "max": 3,
                    "description": "Sets the y position (in normalized coordinates) of the legend.",
                    "valType": "number",
                    "min": -2
                },
                "x": {
                    "role": "style",
                    "dflt": 1.02,
                    "max": 3,
                    "description": "Sets the x position (in normalized coordinates) of the legend.",
                    "valType": "number",
                    "min": -2
                },
                "xanchor": {
                    "dflt": "left",
                    "values": [
                        "auto",
                        "left",
                        "center",
                        "right"
                    ],
                    "description": "Sets the legend's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the legend.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "role": "object",
                "borderwidth": {
                    "dflt": 0,
                    "description": "Sets the width (in px) of the border enclosing the legend.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "font": {
                    "color": {
                        "role": "style",
                        "valType": "color"
                    },
                    "family": {
                        "noBlank": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "size": {
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "description": "Sets the font used to text the legend items."
                },
                "yanchor": {
                    "dflt": "auto",
                    "values": [
                        "auto",
                        "top",
                        "middle",
                        "bottom"
                    ],
                    "description": "Sets the legend's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the legend.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "bgcolor": {
                    "description": "Sets the legend background color.",
                    "role": "style",
                    "valType": "color"
                }
            },
            "hidesources": {
                "dflt": false,
                "description": "Determines whether or not a text link citing the data source is placed at the bottom-right cored of the figure. Has only an effect only on graphs that have been generated via forked graphs from the plotly service (at https://plot.ly or on-premise).",
                "role": "info",
                "valType": "boolean"
            },
            "yaxis": {
                "tickwidth": {
                    "dflt": 1,
                    "description": "Sets the tick width (in px).",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "showtickprefix": {
                    "dflt": "all",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "tickangle": {
                    "dflt": "auto",
                    "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                    "role": "style",
                    "valType": "angle"
                },
                "rangemode": {
                    "dflt": "normal",
                    "values": [
                        "normal",
                        "tozero",
                        "nonnegative"
                    ],
                    "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "showticksuffix": {
                    "dflt": "all",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "description": "Same as `showtickprefix` but for tick suffixes.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "fixedrange": {
                    "dflt": false,
                    "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled.",
                    "role": "info",
                    "valType": "boolean"
                },
                "exponentformat": {
                    "dflt": "B",
                    "values": [
                        "none",
                        "e",
                        "E",
                        "power",
                        "SI",
                        "B"
                    ],
                    "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "tick0": {
                    "dflt": 0,
                    "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                    "role": "style",
                    "valType": "number"
                },
                "autorange": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "reversed"
                    ],
                    "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "gridcolor": {
                    "dflt": "#eee",
                    "description": "Sets the color of the grid lines.",
                    "role": "style",
                    "valType": "color"
                },
                "ticklen": {
                    "dflt": 5,
                    "description": "Sets the tick length (in px).",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "title": {
                    "description": "Sets the title of this axis.",
                    "role": "info",
                    "valType": "string"
                },
                "tickmode": {
                    "values": [
                        "auto",
                        "linear",
                        "array"
                    ],
                    "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "range": {
                    "items": [
                        {
                            "valType": "number"
                        },
                        {
                            "valType": "number"
                        }
                    ],
                    "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0",
                    "role": "info",
                    "valType": "info_array"
                },
                "hoverformat": {
                    "dflt": "",
                    "description": "Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                    "role": "style",
                    "valType": "string"
                },
                "ticktext": {
                    "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                    "role": "data",
                    "valType": "data_array"
                },
                "tickcolor": {
                    "dflt": "#444",
                    "description": "Sets the tick color.",
                    "role": "style",
                    "valType": "color"
                },
                "linecolor": {
                    "dflt": "#444",
                    "description": "Sets the axis line color.",
                    "role": "style",
                    "valType": "color"
                },
                "nticks": {
                    "dflt": 0,
                    "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                    "role": "style",
                    "valType": "integer",
                    "min": 0
                },
                "mirror": {
                    "dflt": false,
                    "values": [
                        true,
                        "ticks",
                        false,
                        "all",
                        "allticks"
                    ],
                    "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "tickfont": {
                    "color": {
                        "role": "style",
                        "valType": "color"
                    },
                    "family": {
                        "noBlank": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "size": {
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "description": "Sets the tick font."
                },
                "tickvalssrc": {
                    "description": "Sets the source reference on plot.ly for  tickvals .",
                    "role": "info",
                    "valType": "string"
                },
                "_deprecated": {
                    "autotick": {
                        "description": "Obsolete. Set `tickmode` to *auto* for old `autotick` *true* behavior. Set `tickmode` to *linear* for `autotick` *false*.",
                        "role": "info",
                        "valType": "boolean"
                    }
                },
                "overlaying": {
                    "values": [
                        "free",
                        "/^x([2-9]|[1-9][0-9]+)?$/",
                        "/^y([2-9]|[1-9][0-9]+)?$/"
                    ],
                    "description": "If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "_isSubplotObj": true,
                "ticks": {
                    "values": [
                        "outside",
                        "inside",
                        ""
                    ],
                    "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "gridwidth": {
                    "dflt": 1,
                    "description": "Sets the width (in px) of the grid lines.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "showticklabels": {
                    "dflt": true,
                    "description": "Determines whether or not the tick labels are drawn.",
                    "role": "style",
                    "valType": "boolean"
                },
                "position": {
                    "role": "style",
                    "dflt": 0,
                    "max": 1,
                    "description": "Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*.",
                    "valType": "number",
                    "min": 0
                },
                "showexponent": {
                    "dflt": "all",
                    "values": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "showgrid": {
                    "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.",
                    "role": "style",
                    "valType": "boolean"
                },
                "ticktextsrc": {
                    "description": "Sets the source reference on plot.ly for  ticktext .",
                    "role": "info",
                    "valType": "string"
                },
                "side": {
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "description": "Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "zerolinewidth": {
                    "dflt": 1,
                    "description": "Sets the width (in px) of the zero line.",
                    "role": "style",
                    "valType": "number"
                },
                "role": "object",
                "tickprefix": {
                    "dflt": "",
                    "description": "Sets a tick label prefix.",
                    "role": "style",
                    "valType": "string"
                },
                "type": {
                    "dflt": "-",
                    "values": [
                        "-",
                        "linear",
                        "log",
                        "date",
                        "category"
                    ],
                    "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "linewidth": {
                    "dflt": 1,
                    "description": "Sets the width (in px) of the axis line.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "tickformat": {
                    "dflt": "",
                    "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                    "role": "style",
                    "valType": "string"
                },
                "dtick": {
                    "dflt": 1,
                    "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                    "role": "style",
                    "valType": "any"
                },
                "zerolinecolor": {
                    "dflt": "#444",
                    "description": "Sets the line color of the zero line.",
                    "role": "style",
                    "valType": "color"
                },
                "showline": {
                    "dflt": false,
                    "description": "Determines whether or not a line bounding this axis is drawn.",
                    "role": "style",
                    "valType": "boolean"
                },
                "domain": {
                    "dflt": [
                        0,
                        1
                    ],
                    "items": [
                        {
                            "max": 1,
                            "valType": "number",
                            "min": 0
                        },
                        {
                            "max": 1,
                            "valType": "number",
                            "min": 0
                        }
                    ],
                    "description": "Sets the domain of this axis (in plot fraction).",
                    "role": "info",
                    "valType": "info_array"
                },
                "ticksuffix": {
                    "dflt": "",
                    "description": "Sets a tick label suffix.",
                    "role": "style",
                    "valType": "string"
                },
                "zeroline": {
                    "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.",
                    "role": "style",
                    "valType": "boolean"
                },
                "titlefont": {
                    "color": {
                        "role": "style",
                        "valType": "color"
                    },
                    "family": {
                        "noBlank": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "size": {
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "description": "Sets this axis' title font."
                },
                "tickvals": {
                    "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                    "role": "data",
                    "valType": "data_array"
                },
                "anchor": {
                    "values": [
                        "free",
                        "/^x([2-9]|[1-9][0-9]+)?$/",
                        "/^y([2-9]|[1-9][0-9]+)?$/"
                    ],
                    "description": "If set to an opposite-letter axis id (e.g. `xaxis2`, `yaxis`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis' position is determined by `position`.",
                    "role": "info",
                    "valType": "enumerated"
                }
            },
            "margin": {
                "autoexpand": {
                    "dflt": true,
                    "role": "info",
                    "valType": "boolean"
                },
                "role": "object",
                "t": {
                    "dflt": 100,
                    "description": "Sets the top margin (in px).",
                    "role": "info",
                    "valType": "number",
                    "min": 0
                },
                "l": {
                    "dflt": 80,
                    "description": "Sets the left margin (in px).",
                    "role": "info",
                    "valType": "number",
                    "min": 0
                },
                "b": {
                    "dflt": 80,
                    "description": "Sets the bottom margin (in px).",
                    "role": "info",
                    "valType": "number",
                    "min": 0
                },
                "pad": {
                    "dflt": 0,
                    "description": "Sets the amount of padding (in px) between the plotting area and the axis lines",
                    "role": "info",
                    "valType": "number",
                    "min": 0
                },
                "r": {
                    "dflt": 80,
                    "description": "Sets the right margin (in px).",
                    "role": "info",
                    "valType": "number",
                    "min": 0
                }
            },
            "orientation": {
                "description": "For polar plots only. Rotates the entire polar by the given angle.",
                "role": "info",
                "valType": "angle"
            }
        }
    },
    "defs": {
        "metaKeys": [
            "_isSubplotObj",
            "_isLinkedToArray",
            "_deprecated",
            "description",
            "role"
        ],
        "valObjects": {
            "string": {
                "otherOpts": [
                    "dflt",
                    "noBlank",
                    "strict",
                    "arrayOk",
                    "values"
                ],
                "requiredOpts": [],
                "description": "A string value. Numbers are converted to strings except for attributes with `strict` set to true."
            },
            "colorscale": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [],
                "description": "A Plotly colorscale either picked by a name: (any of Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis ) customized as an {array} of 2-element {arrays} where the first element is the normalized color level value (starting at *0* and ending at *1*), and the second item is a valid color string."
            },
            "number": {
                "otherOpts": [
                    "dflt",
                    "min",
                    "max",
                    "arrayOk"
                ],
                "requiredOpts": [],
                "description": "A number or a numeric value (e.g. a number inside a string). When applicable, values greater (less) than `max` (`min`) are coerced to the `dflt`."
            },
            "data_array": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [],
                "description": "An {array} of data. The value MUST be an {array}, or we ignore it."
            },
            "any": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [],
                "description": "Any type."
            },
            "integer": {
                "otherOpts": [
                    "dflt",
                    "min",
                    "max"
                ],
                "requiredOpts": [],
                "description": "An integer or an integer inside a string. When applicable, values greater (less) than `max` (`min`) are coerced to the `dflt`."
            },
            "enumerated": {
                "otherOpts": [
                    "dflt",
                    "coerceNumber",
                    "arrayOk"
                ],
                "requiredOpts": [
                    "values"
                ],
                "description": "Enumerated value type. The available values are listed in `values`."
            },
            "axisid": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [],
                "description": "An axis id string (e.g. 'x', 'x2', 'x3', ...)."
            },
            "boolean": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [],
                "description": "A boolean (true/false) value."
            },
            "angle": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [],
                "description": "A number (in degree) between -180 and 180."
            },
            "color": {
                "otherOpts": [
                    "dflt",
                    "arrayOk"
                ],
                "requiredOpts": [],
                "description": "A string describing color. Supported formats: - hex (e.g. '#d3d3d3') - rgb (e.g. 'rgb(255, 0, 0)') - rgba (e.g. 'rgb(255, 0, 0, 0.5)') - hsl (e.g. 'hsl(0, 100%, 50%)') - hsv (e.g. 'hsv(0, 100%, 100%)') - named colors (full list: http://www.w3.org/TR/css3-color/#svg-color)"
            },
            "flaglist": {
                "otherOpts": [
                    "dflt",
                    "extras"
                ],
                "requiredOpts": [
                    "flags"
                ],
                "description": "A string representing a combination of flags (order does not matter here). Combine any of the available `flags` with *+*. (e.g. ('lines+markers')). Values in `extras` cannot be combined."
            },
            "sceneid": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [],
                "description": "A scene id string (e.g. 'scene', 'scene2', 'scene3', ...)."
            },
            "geoid": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [],
                "description": "A geo id string (e.g. 'geo', 'geo2', 'geo3', ...)."
            },
            "info_array": {
                "otherOpts": [
                    "dflt"
                ],
                "requiredOpts": [
                    "items"
                ],
                "description": "An {array} of plot information."
            }
        }
    },
    "traces": {
        "scattergeo": {
            "hrName": "scatter_geo",
            "description": "The data visualized as scatter point or lines on a geographic map is provided either by longitude/latitude pairs in `lon` and `lat` respectively or by geographic location IDs or names in `locations`.",
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "locations": {
                    "description": "Sets the coordinates via location IDs or names. Coordinates correspond to the centroid of each location given. See `locationmode` for more info.",
                    "role": "data",
                    "valType": "data_array"
                },
                "locationmode": {
                    "dflt": "ISO-3",
                    "values": [
                        "ISO-3",
                        "USA-states",
                        "country names"
                    ],
                    "description": "Determines the set of locations used to match entries in `locations` to regions on the map.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "latsrc": {
                    "description": "Sets the source reference on plot.ly for  lat .",
                    "role": "info",
                    "valType": "string"
                },
                "lon": {
                    "description": "Sets the longitude coordinates (in degrees East).",
                    "role": "data",
                    "valType": "data_array"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "lonsrc": {
                    "description": "Sets the source reference on plot.ly for  lon .",
                    "role": "info",
                    "valType": "string"
                },
                "mode": {
                    "flags": [
                        "lines",
                        "markers",
                        "text"
                    ],
                    "extras": [
                        "none"
                    ],
                    "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.",
                    "dflt": "markers",
                    "valType": "flaglist",
                    "role": "info"
                },
                "textposition": {
                    "values": [
                        "top left",
                        "top center",
                        "top right",
                        "middle left",
                        "middle center",
                        "middle right",
                        "bottom left",
                        "bottom center",
                        "bottom right"
                    ],
                    "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates.",
                    "dflt": "middle center",
                    "arrayOk": true,
                    "valType": "enumerated",
                    "role": "style"
                },
                "textpositionsrc": {
                    "description": "Sets the source reference on plot.ly for  textposition .",
                    "role": "info",
                    "valType": "string"
                },
                "textfont": {
                    "family": {
                        "noBlank": true,
                        "arrayOk": true,
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "sizesrc": {
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object",
                    "description": "Sets the text font.",
                    "familysrc": {
                        "description": "Sets the source reference on plot.ly for  family .",
                        "role": "info",
                        "valType": "string"
                    },
                    "color": {
                        "arrayOk": true,
                        "role": "style",
                        "valType": "color"
                    },
                    "size": {
                        "arrayOk": true,
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    }
                },
                "geo": {
                    "dflt": "geo",
                    "description": "Sets a reference between this trace's geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.",
                    "role": "info",
                    "valType": "geoid"
                },
                "hoverinfo": {
                    "flags": [
                        "lon",
                        "lat",
                        "location",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "marker": {
                    "sizemin": {
                        "dflt": 0,
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "colorbar": {
                        "tickwidth": {
                            "dflt": 1,
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "outlinecolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "y": {
                            "role": "style",
                            "dflt": 0.5,
                            "max": 3,
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tickfont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets the tick font."
                        },
                        "len": {
                            "dflt": 1,
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showexponent": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tick0": {
                            "dflt": 0,
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "valType": "number"
                        },
                        "ticktext": {
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "ticklen": {
                            "dflt": 5,
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "bgcolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "valType": "color"
                        },
                        "ypad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "ticktextsrc": {
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titlefont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets this color bar's title font."
                        },
                        "title": {
                            "dflt": "Click to enter colorscale title",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "valType": "string"
                        },
                        "tickmode": {
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ],
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ],
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thickness": {
                            "dflt": 30,
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickangle": {
                            "dflt": "auto",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "valType": "angle"
                        },
                        "dtick": {
                            "dflt": 1,
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "valType": "any"
                        },
                        "tickformat": {
                            "dflt": "",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickcolor": {
                            "dflt": "#444",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "ticks": {
                            "dflt": "",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ],
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "x": {
                            "role": "style",
                            "dflt": 1.02,
                            "max": 3,
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "xpad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "nticks": {
                            "dflt": 0,
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "valType": "integer",
                            "min": 0
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ],
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "ticksuffix": {
                            "dflt": "",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvalssrc": {
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titleside": {
                            "dflt": "top",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ],
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "bordercolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "showticklabels": {
                            "dflt": true,
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "outlinewidth": {
                            "dflt": 1,
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickprefix": {
                            "dflt": "",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvals": {
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "borderwidth": {
                            "dflt": 0,
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ],
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "role": "object"
                    },
                    "reversescale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "sizesrc": {
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info",
                        "valType": "string"
                    },
                    "sizeref": {
                        "dflt": 1,
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.",
                        "role": "style",
                        "valType": "number"
                    },
                    "size": {
                        "role": "style",
                        "dflt": 6,
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "valType": "number",
                        "min": 0
                    },
                    "cauto": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "opacitysrc": {
                        "description": "Sets the source reference on plot.ly for  opacity .",
                        "role": "info",
                        "valType": "string"
                    },
                    "cmin": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "colorscale": {
                        "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use cmin and cmax",
                        "role": "style",
                        "valType": "colorscale"
                    },
                    "cmax": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "showscale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "opacity": {
                        "role": "style",
                        "description": "Sets the marker opacity.",
                        "max": 1,
                        "arrayOk": true,
                        "valType": "number",
                        "min": 0
                    },
                    "sizemode": {
                        "dflt": "diameter",
                        "values": [
                            "diameter",
                            "area"
                        ],
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object",
                    "color": {
                        "arrayOk": true,
                        "description": "Sets the marker color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "line": {
                        "reversescale": {
                            "dflt": false,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "width": {
                            "arrayOk": true,
                            "min": 0,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "valType": "number",
                            "role": "style"
                        },
                        "colorscale": {
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style",
                            "valType": "colorscale"
                        },
                        "colorsrc": {
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info",
                            "valType": "string"
                        },
                        "role": "object",
                        "cauto": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "color": {
                            "arrayOk": true,
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "valType": "color"
                        },
                        "widthsrc": {
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info",
                            "valType": "string"
                        },
                        "cmin": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "cmax": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "autocolorscale": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "valType": "boolean"
                        }
                    },
                    "symbolsrc": {
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symbol": {
                        "values": [
                            0,
                            "circle",
                            100,
                            "circle-open",
                            200,
                            "circle-dot",
                            300,
                            "circle-open-dot",
                            1,
                            "square",
                            101,
                            "square-open",
                            201,
                            "square-dot",
                            301,
                            "square-open-dot",
                            2,
                            "diamond",
                            102,
                            "diamond-open",
                            202,
                            "diamond-dot",
                            302,
                            "diamond-open-dot",
                            3,
                            "cross",
                            103,
                            "cross-open",
                            203,
                            "cross-dot",
                            303,
                            "cross-open-dot",
                            4,
                            "x",
                            104,
                            "x-open",
                            204,
                            "x-dot",
                            304,
                            "x-open-dot",
                            5,
                            "triangle-up",
                            105,
                            "triangle-up-open",
                            205,
                            "triangle-up-dot",
                            305,
                            "triangle-up-open-dot",
                            6,
                            "triangle-down",
                            106,
                            "triangle-down-open",
                            206,
                            "triangle-down-dot",
                            306,
                            "triangle-down-open-dot",
                            7,
                            "triangle-left",
                            107,
                            "triangle-left-open",
                            207,
                            "triangle-left-dot",
                            307,
                            "triangle-left-open-dot",
                            8,
                            "triangle-right",
                            108,
                            "triangle-right-open",
                            208,
                            "triangle-right-dot",
                            308,
                            "triangle-right-open-dot",
                            9,
                            "triangle-ne",
                            109,
                            "triangle-ne-open",
                            209,
                            "triangle-ne-dot",
                            309,
                            "triangle-ne-open-dot",
                            10,
                            "triangle-se",
                            110,
                            "triangle-se-open",
                            210,
                            "triangle-se-dot",
                            310,
                            "triangle-se-open-dot",
                            11,
                            "triangle-sw",
                            111,
                            "triangle-sw-open",
                            211,
                            "triangle-sw-dot",
                            311,
                            "triangle-sw-open-dot",
                            12,
                            "triangle-nw",
                            112,
                            "triangle-nw-open",
                            212,
                            "triangle-nw-dot",
                            312,
                            "triangle-nw-open-dot",
                            13,
                            "pentagon",
                            113,
                            "pentagon-open",
                            213,
                            "pentagon-dot",
                            313,
                            "pentagon-open-dot",
                            14,
                            "hexagon",
                            114,
                            "hexagon-open",
                            214,
                            "hexagon-dot",
                            314,
                            "hexagon-open-dot",
                            15,
                            "hexagon2",
                            115,
                            "hexagon2-open",
                            215,
                            "hexagon2-dot",
                            315,
                            "hexagon2-open-dot",
                            16,
                            "octagon",
                            116,
                            "octagon-open",
                            216,
                            "octagon-dot",
                            316,
                            "octagon-open-dot",
                            17,
                            "star",
                            117,
                            "star-open",
                            217,
                            "star-dot",
                            317,
                            "star-open-dot",
                            18,
                            "hexagram",
                            118,
                            "hexagram-open",
                            218,
                            "hexagram-dot",
                            318,
                            "hexagram-open-dot",
                            19,
                            "star-triangle-up",
                            119,
                            "star-triangle-up-open",
                            219,
                            "star-triangle-up-dot",
                            319,
                            "star-triangle-up-open-dot",
                            20,
                            "star-triangle-down",
                            120,
                            "star-triangle-down-open",
                            220,
                            "star-triangle-down-dot",
                            320,
                            "star-triangle-down-open-dot",
                            21,
                            "star-square",
                            121,
                            "star-square-open",
                            221,
                            "star-square-dot",
                            321,
                            "star-square-open-dot",
                            22,
                            "star-diamond",
                            122,
                            "star-diamond-open",
                            222,
                            "star-diamond-dot",
                            322,
                            "star-diamond-open-dot",
                            23,
                            "diamond-tall",
                            123,
                            "diamond-tall-open",
                            223,
                            "diamond-tall-dot",
                            323,
                            "diamond-tall-open-dot",
                            24,
                            "diamond-wide",
                            124,
                            "diamond-wide-open",
                            224,
                            "diamond-wide-dot",
                            324,
                            "diamond-wide-open-dot",
                            25,
                            "hourglass",
                            125,
                            "hourglass-open",
                            26,
                            "bowtie",
                            126,
                            "bowtie-open",
                            27,
                            "circle-cross",
                            127,
                            "circle-cross-open",
                            28,
                            "circle-x",
                            128,
                            "circle-x-open",
                            29,
                            "square-cross",
                            129,
                            "square-cross-open",
                            30,
                            "square-x",
                            130,
                            "square-x-open",
                            31,
                            "diamond-cross",
                            131,
                            "diamond-cross-open",
                            32,
                            "diamond-x",
                            132,
                            "diamond-x-open",
                            33,
                            "cross-thin",
                            133,
                            "cross-thin-open",
                            34,
                            "x-thin",
                            134,
                            "x-thin-open",
                            35,
                            "asterisk",
                            135,
                            "asterisk-open",
                            36,
                            "hash",
                            136,
                            "hash-open",
                            236,
                            "hash-dot",
                            336,
                            "hash-open-dot",
                            37,
                            "y-up",
                            137,
                            "y-up-open",
                            38,
                            "y-down",
                            138,
                            "y-down-open",
                            39,
                            "y-left",
                            139,
                            "y-left-open",
                            40,
                            "y-right",
                            140,
                            "y-right-open",
                            41,
                            "line-ew",
                            141,
                            "line-ew-open",
                            42,
                            "line-ns",
                            142,
                            "line-ns-open",
                            43,
                            "line-ne",
                            143,
                            "line-ne-open",
                            44,
                            "line-nw",
                            144,
                            "line-nw-open"
                        ],
                        "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.",
                        "dflt": "circle",
                        "arrayOk": true,
                        "valType": "enumerated",
                        "role": "style"
                    },
                    "autocolorscale": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "valType": "boolean"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "dflt": "",
                    "arrayOk": true,
                    "description": "Sets text elements associated with each (lon,lat) pair. or item in `locations`. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (lon,lat) or `locations` coordinates.",
                    "role": "info",
                    "valType": "string"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "scattergeo",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "locationssrc": {
                    "description": "Sets the source reference on plot.ly for  locations .",
                    "role": "info",
                    "valType": "string"
                },
                "line": {
                    "color": {
                        "description": "Sets the line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "width": {
                        "dflt": 2,
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "dash": {
                        "dflt": "solid",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ],
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "valType": "string"
                    },
                    "role": "object"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "lat": {
                    "description": "Sets the latitude coordinates (in degrees North).",
                    "role": "data",
                    "valType": "data_array"
                }
            }
        },
        "choropleth": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "locations": {
                    "description": "Sets the coordinates via location IDs or names. See `locationmode` for more info.",
                    "role": "data",
                    "valType": "data_array"
                },
                "colorscale": {
                    "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax",
                    "role": "style",
                    "valType": "colorscale"
                },
                "reversescale": {
                    "dflt": false,
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "valType": "boolean"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "colorbar": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "outlinecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "y": {
                        "role": "style",
                        "dflt": 0.5,
                        "max": 3,
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "len": {
                        "dflt": 1,
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "bgcolor": {
                        "dflt": "rgba(0,0,0,0)",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ypad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this color bar's title font."
                    },
                    "title": {
                        "dflt": "Click to enter colorscale title",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ],
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thickness": {
                        "dflt": 30,
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "ticks": {
                        "dflt": "",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "x": {
                        "role": "style",
                        "dflt": 1.02,
                        "max": 3,
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "xpad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ],
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titleside": {
                        "dflt": "top",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ],
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "bordercolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "outlinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "borderwidth": {
                        "dflt": 0,
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object"
                },
                "locationmode": {
                    "dflt": "ISO-3",
                    "values": [
                        "ISO-3",
                        "USA-states",
                        "country names"
                    ],
                    "description": "Determines the set of locations used to match entries in `locations` to regions on the map.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "zauto": {
                    "dflt": true,
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "valType": "boolean"
                },
                "showscale": {
                    "dflt": true,
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "valType": "boolean"
                },
                "zmax": {
                    "dflt": null,
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "z": {
                    "description": "Sets the color values.",
                    "role": "data",
                    "valType": "data_array"
                },
                "geo": {
                    "dflt": "geo",
                    "description": "Sets a reference between this trace's geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.",
                    "role": "info",
                    "valType": "geoid"
                },
                "locationssrc": {
                    "description": "Sets the source reference on plot.ly for  locations .",
                    "role": "info",
                    "valType": "string"
                },
                "marker": {
                    "line": {
                        "color": {
                            "arrayOk": true,
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "valType": "color"
                        },
                        "width": {
                            "arrayOk": true,
                            "min": 0,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "valType": "number",
                            "role": "style"
                        },
                        "colorsrc": {
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info",
                            "valType": "string"
                        },
                        "widthsrc": {
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info",
                            "valType": "string"
                        },
                        "role": "object"
                    },
                    "role": "object"
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "description": "Sets the text elements associated with each location.",
                    "role": "data",
                    "valType": "data_array"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "zsrc": {
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info",
                    "valType": "string"
                },
                "zmin": {
                    "dflt": null,
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "choropleth",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "hoverinfo": {
                    "flags": [
                        "location",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "autocolorscale": {
                    "dflt": true,
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "valType": "boolean"
                }
            },
            "description": "The data that describes the choropleth value-to-color mapping is set in `z`. The geographic locations corresponding to each value in `z` are set in `locations`."
        },
        "pie": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "label0": {
                    "dflt": 0,
                    "description": "Alternate to `labels`. Builds a numeric set of labels. Use with `dlabel` where `label0` is the starting label and `dlabel` the step.",
                    "role": "info",
                    "valType": "number"
                },
                "valuessrc": {
                    "description": "Sets the source reference on plot.ly for  values .",
                    "role": "info",
                    "valType": "string"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "dlabel": {
                    "dflt": 1,
                    "description": "Sets the label step. See `label0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "sort": {
                    "dflt": true,
                    "description": "Determines whether or not the sectors of reordered from largest to smallest.",
                    "role": "style",
                    "valType": "boolean"
                },
                "pull": {
                    "arrayOk": true,
                    "role": "style",
                    "dflt": 0,
                    "max": 1,
                    "description": "Sets the fraction of larger radius to pull the sectors out from the center. This can be a constant to pull all slices apart from each other equally or an array to highlight one or more slices.",
                    "valType": "number",
                    "min": 0
                },
                "outsidetextfont": {
                    "color": {
                        "role": "style",
                        "valType": "color"
                    },
                    "family": {
                        "noBlank": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "size": {
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "description": "Sets the font used for `textinfo` lying outside the pie."
                },
                "values": {
                    "description": "Sets the values of the sectors of this pie chart.",
                    "role": "data",
                    "valType": "data_array"
                },
                "scalegroup": {
                    "dflt": "",
                    "description": "If there are multiple pies that should be sized according to their totals, link them by providing a non-empty group id here shared by every trace in the same group.",
                    "role": "info",
                    "valType": "string"
                },
                "labels": {
                    "description": "Sets the sector labels.",
                    "role": "data",
                    "valType": "data_array"
                },
                "textinfo": {
                    "flags": [
                        "label",
                        "text",
                        "value",
                        "percent"
                    ],
                    "description": "Determines which trace information appear on the graph.",
                    "extras": [
                        "none"
                    ],
                    "role": "info",
                    "valType": "flaglist"
                },
                "hole": {
                    "role": "style",
                    "dflt": 0,
                    "max": 1,
                    "description": "Sets the fraction of the radius to cut out of the pie. Use this to make a donut chart.",
                    "valType": "number",
                    "min": 0
                },
                "direction": {
                    "dflt": "counterclockwise",
                    "values": [
                        "clockwise",
                        "counterclockwise"
                    ],
                    "description": "Specifies the direction at which succeeding sectors follow one another.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "textposition": {
                    "values": [
                        "inside",
                        "outside",
                        "auto",
                        "none"
                    ],
                    "description": "Specifies the location of the `textinfo`.",
                    "dflt": "auto",
                    "arrayOk": true,
                    "valType": "enumerated",
                    "role": "info"
                },
                "labelssrc": {
                    "description": "Sets the source reference on plot.ly for  labels .",
                    "role": "info",
                    "valType": "string"
                },
                "textfont": {
                    "color": {
                        "role": "style",
                        "valType": "color"
                    },
                    "family": {
                        "noBlank": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "size": {
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "description": "Sets the font used for `textinfo`."
                },
                "textpositionsrc": {
                    "description": "Sets the source reference on plot.ly for  textposition .",
                    "role": "info",
                    "valType": "string"
                },
                "hoverinfo": {
                    "flags": [
                        "label",
                        "text",
                        "value",
                        "percent",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "marker": {
                    "colors": {
                        "description": "Sets the color of each sector of this pie chart. If not specified, the default trace color set is used to pick the sector colors.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "line": {
                        "color": {
                            "dflt": "#444",
                            "arrayOk": true,
                            "description": "Sets the color of the line enclosing each sector.",
                            "role": "style",
                            "valType": "color"
                        },
                        "width": {
                            "role": "style",
                            "dflt": 0,
                            "arrayOk": true,
                            "description": "Sets the width (in px) of the line enclosing each sector.",
                            "valType": "number",
                            "min": 0
                        },
                        "colorsrc": {
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info",
                            "valType": "string"
                        },
                        "widthsrc": {
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info",
                            "valType": "string"
                        },
                        "role": "object"
                    },
                    "role": "object",
                    "colorssrc": {
                        "description": "Sets the source reference on plot.ly for  colors .",
                        "role": "info",
                        "valType": "string"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "description": "Sets text elements associated with each sector.",
                    "role": "data",
                    "valType": "data_array"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "insidetextfont": {
                    "color": {
                        "role": "style",
                        "valType": "color"
                    },
                    "family": {
                        "noBlank": true,
                        "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "size": {
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "description": "Sets the font used for `textinfo` lying inside the pie."
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "domain": {
                    "y": {
                        "dflt": [
                            0,
                            1
                        ],
                        "items": [
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            },
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            }
                        ],
                        "description": "Sets the vertical domain of this pie trace (in plot fraction).",
                        "role": "info",
                        "valType": "info_array"
                    },
                    "role": "object",
                    "x": {
                        "dflt": [
                            0,
                            1
                        ],
                        "items": [
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            },
                            {
                                "max": 1,
                                "valType": "number",
                                "min": 0
                            }
                        ],
                        "description": "Sets the horizontal domain of this pie trace (in plot fraction).",
                        "role": "info",
                        "valType": "info_array"
                    }
                },
                "type": "pie",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "pullsrc": {
                    "description": "Sets the source reference on plot.ly for  pull .",
                    "role": "info",
                    "valType": "string"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "rotation": {
                    "role": "style",
                    "dflt": 0,
                    "max": 360,
                    "description": "Instead of the first slice starting at 12 o'clock, rotate to some other angle.",
                    "valType": "number",
                    "min": -360
                }
            },
            "layoutAttributes": {
                "hiddenlabelssrc": {
                    "description": "Sets the source reference on plot.ly for  hiddenlabels .",
                    "role": "info",
                    "valType": "string"
                },
                "hiddenlabels": {
                    "role": "data",
                    "valType": "data_array"
                }
            },
            "description": "A data visualized by the sectors of the pie is set in `values`. The sector labels are set in `labels`. The sector colors are set in `marker.colors`"
        },
        "histogram": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "error_y": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "autobiny": {
                    "dflt": true,
                    "description": "Determines whether or not the y axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "valType": "boolean"
                },
                "y": {
                    "description": "Sets the sample data to be binned on the y axis.",
                    "role": "data",
                    "valType": "data_array"
                },
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "error_x": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "xbins": {
                    "start": {
                        "dflt": null,
                        "description": "Sets the starting value for the x axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "end": {
                        "dflt": null,
                        "description": "Sets the end value for the x axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "size": {
                        "dflt": 1,
                        "description": "Sets the step in-between value each x axis bin.",
                        "role": "style",
                        "valType": "any"
                    }
                },
                "ybins": {
                    "start": {
                        "dflt": null,
                        "description": "Sets the starting value for the y axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "end": {
                        "dflt": null,
                        "description": "Sets the end value for the y axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "size": {
                        "dflt": 1,
                        "description": "Sets the step in-between value each y axis bin.",
                        "role": "style",
                        "valType": "any"
                    }
                },
                "x": {
                    "description": "Sets the sample data to be binned on the x axis.",
                    "role": "data",
                    "valType": "data_array"
                },
                "histnorm": {
                    "dflt": "",
                    "values": [
                        "",
                        "percent",
                        "probability",
                        "density",
                        "probability density"
                    ],
                    "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).",
                    "role": "style",
                    "valType": "enumerated"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "marker": {
                    "colorbar": {
                        "tickwidth": {
                            "dflt": 1,
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "outlinecolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "y": {
                            "role": "style",
                            "dflt": 0.5,
                            "max": 3,
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tickfont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets the tick font."
                        },
                        "len": {
                            "dflt": 1,
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showexponent": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tick0": {
                            "dflt": 0,
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "valType": "number"
                        },
                        "ticktext": {
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "ticklen": {
                            "dflt": 5,
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "bgcolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "valType": "color"
                        },
                        "ypad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "ticktextsrc": {
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titlefont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets this color bar's title font."
                        },
                        "title": {
                            "dflt": "Click to enter colorscale title",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "valType": "string"
                        },
                        "tickmode": {
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ],
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ],
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thickness": {
                            "dflt": 30,
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickangle": {
                            "dflt": "auto",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "valType": "angle"
                        },
                        "dtick": {
                            "dflt": 1,
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "valType": "any"
                        },
                        "tickformat": {
                            "dflt": "",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickcolor": {
                            "dflt": "#444",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "ticks": {
                            "dflt": "",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ],
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "x": {
                            "role": "style",
                            "dflt": 1.02,
                            "max": 3,
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "xpad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "nticks": {
                            "dflt": 0,
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "valType": "integer",
                            "min": 0
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ],
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "ticksuffix": {
                            "dflt": "",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvalssrc": {
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titleside": {
                            "dflt": "top",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ],
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "bordercolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "showticklabels": {
                            "dflt": true,
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "outlinewidth": {
                            "dflt": 1,
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickprefix": {
                            "dflt": "",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvals": {
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "borderwidth": {
                            "dflt": 0,
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ],
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "role": "object"
                    },
                    "reversescale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "cmin": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "colorscale": {
                        "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use cmin and cmax",
                        "role": "style",
                        "valType": "colorscale"
                    },
                    "cmax": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "cauto": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "showscale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object",
                    "color": {
                        "arrayOk": true,
                        "description": "Sets the marker color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "line": {
                        "reversescale": {
                            "dflt": false,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "width": {
                            "role": "style",
                            "dflt": 0,
                            "arrayOk": true,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "valType": "number",
                            "min": 0
                        },
                        "colorscale": {
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style",
                            "valType": "colorscale"
                        },
                        "colorsrc": {
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info",
                            "valType": "string"
                        },
                        "role": "object",
                        "cauto": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "color": {
                            "arrayOk": true,
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "valType": "color"
                        },
                        "widthsrc": {
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info",
                            "valType": "string"
                        },
                        "cmin": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "cmax": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "autocolorscale": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "valType": "boolean"
                        }
                    },
                    "autocolorscale": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "valType": "boolean"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "dflt": "",
                    "arrayOk": true,
                    "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates.",
                    "role": "info",
                    "valType": "string"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "nbinsy": {
                    "dflt": 0,
                    "description": "Sets the number of y axis bins.",
                    "role": "style",
                    "valType": "integer",
                    "min": 0
                },
                "type": "histogram",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "nbinsx": {
                    "dflt": 0,
                    "description": "Sets the number of x axis bins.",
                    "role": "style",
                    "valType": "integer",
                    "min": 0
                },
                "_deprecated": {
                    "bardir": {
                        "values": [
                            "v",
                            "h"
                        ],
                        "description": "Renamed to `orientation`.",
                        "role": "info",
                        "valType": "enumerated"
                    }
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "histfunc": {
                    "dflt": "count",
                    "values": [
                        "count",
                        "sum",
                        "avg",
                        "min",
                        "max"
                    ],
                    "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "autobinx": {
                    "dflt": true,
                    "description": "Determines whether or not the x axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "valType": "boolean"
                },
                "orientation": {
                    "values": [
                        "v",
                        "h"
                    ],
                    "description": "Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                }
            },
            "layoutAttributes": {
                "barmode": {
                    "dflt": "group",
                    "values": [
                        "stack",
                        "group",
                        "overlay"
                    ],
                    "description": "Determines how bars at the same location coordinate are displayed on the graph. With *stack*, the bars are stacked on top of one another With *group*, the bars are plotted next to one another centered around the shared location. With *overlay*, the bars are plotted over one another, you might need to an *opacity* to see multiple bars.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "barnorm": {
                    "dflt": "",
                    "values": [
                        "",
                        "fraction",
                        "percent"
                    ],
                    "description": "Sets the normalization for bar traces on the graph. With *fraction*, the value of each bar is divide by the sum of the values at the location coordinate. With *percent*, the results form *fraction* are presented in percents.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "bargroupgap": {
                    "role": "style",
                    "dflt": 0,
                    "max": 1,
                    "description": "Sets the gap (in plot fraction) between bars of the same location coordinate.",
                    "valType": "number",
                    "min": 0
                },
                "bargap": {
                    "max": 1,
                    "description": "Sets the gap (in plot fraction) between bars of adjacent location coordinates.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                }
            },
            "description": "The sample data from which statistics are computed is set in `x` for vertically spanning histograms and in `y` for horizontally spanning histograms. Binning options are set `xbins` and `ybins` respectively if no aggregation data is provided."
        },
        "histogram2dcontour": {
            "hrName": "histogram_2d_contour",
            "description": "The sample data from which statistics are computed is set in `x` and `y` (where `x` and `y` represent marginal distributions, binning is set in `xbins` and `ybins` in this case) or `z` (where `z` represent the 2D distribution and binning set, binning is set by `x` and `y` in this case). The resulting distribution is visualized as a contour plot.",
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "colorscale": {
                    "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax",
                    "role": "style",
                    "valType": "colorscale"
                },
                "reversescale": {
                    "dflt": false,
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "valType": "boolean"
                },
                "autobiny": {
                    "dflt": true,
                    "description": "Determines whether or not the y axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "valType": "boolean"
                },
                "y": {
                    "description": "Sets the sample data to be binned on the y axis.",
                    "role": "data",
                    "valType": "data_array"
                },
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "colorbar": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "outlinecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "y": {
                        "role": "style",
                        "dflt": 0.5,
                        "max": 3,
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "len": {
                        "dflt": 1,
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "bgcolor": {
                        "dflt": "rgba(0,0,0,0)",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ypad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this color bar's title font."
                    },
                    "title": {
                        "dflt": "Click to enter colorscale title",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ],
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thickness": {
                        "dflt": 30,
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "ticks": {
                        "dflt": "",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "x": {
                        "role": "style",
                        "dflt": 1.02,
                        "max": 3,
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "xpad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ],
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titleside": {
                        "dflt": "top",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ],
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "bordercolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "outlinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "borderwidth": {
                        "dflt": 0,
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object"
                },
                "xbins": {
                    "start": {
                        "dflt": null,
                        "description": "Sets the starting value for the x axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "end": {
                        "dflt": null,
                        "description": "Sets the end value for the x axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "size": {
                        "dflt": 1,
                        "description": "Sets the step in-between value each x axis bin.",
                        "role": "style",
                        "valType": "any"
                    }
                },
                "ybins": {
                    "start": {
                        "dflt": null,
                        "description": "Sets the starting value for the y axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "end": {
                        "dflt": null,
                        "description": "Sets the end value for the y axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "size": {
                        "dflt": 1,
                        "description": "Sets the step in-between value each y axis bin.",
                        "role": "style",
                        "valType": "any"
                    }
                },
                "zauto": {
                    "dflt": true,
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "valType": "boolean"
                },
                "showscale": {
                    "dflt": true,
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "valType": "boolean"
                },
                "x": {
                    "description": "Sets the sample data to be binned on the x axis.",
                    "role": "data",
                    "valType": "data_array"
                },
                "zmax": {
                    "dflt": null,
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "histnorm": {
                    "dflt": "",
                    "values": [
                        "",
                        "percent",
                        "probability",
                        "density",
                        "probability density"
                    ],
                    "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).",
                    "role": "style",
                    "valType": "enumerated"
                },
                "line": {
                    "color": {
                        "description": "Sets the color of the contour level. Has no if `contours.coloring` is set to *lines*.",
                        "role": "style",
                        "valType": "color"
                    },
                    "width": {
                        "dflt": 2,
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "smoothing": {
                        "role": "style",
                        "dflt": 1,
                        "max": 1.3,
                        "description": "Sets the amount of smoothing for the contour lines, where *0* corresponds to no smoothing.",
                        "valType": "number",
                        "min": 0
                    },
                    "dash": {
                        "dflt": "solid",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ],
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "valType": "string"
                    },
                    "role": "object"
                },
                "z": {
                    "description": "Sets the aggregation data.",
                    "role": "data",
                    "valType": "data_array"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "marker": {
                    "color": {
                        "description": "Sets the aggregation data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object"
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "zsrc": {
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info",
                    "valType": "string"
                },
                "zmin": {
                    "dflt": null,
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "nbinsy": {
                    "dflt": 0,
                    "description": "Sets the number of y axis bins.",
                    "role": "style",
                    "valType": "integer",
                    "min": 0
                },
                "type": "histogram2dcontour",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "nbinsx": {
                    "dflt": 0,
                    "description": "Sets the number of x axis bins.",
                    "role": "style",
                    "valType": "integer",
                    "min": 0
                },
                "autocontour": {
                    "dflt": true,
                    "description": "Determines whether of not the contour level attributes at picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`.",
                    "role": "style",
                    "valType": "boolean"
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "histfunc": {
                    "dflt": "count",
                    "values": [
                        "count",
                        "sum",
                        "avg",
                        "min",
                        "max"
                    ],
                    "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "autobinx": {
                    "dflt": true,
                    "description": "Determines whether or not the x axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "valType": "boolean"
                },
                "ncontours": {
                    "dflt": 0,
                    "description": "Sets the number of contour levels.",
                    "role": "style",
                    "valType": "integer"
                },
                "contours": {
                    "start": {
                        "dflt": null,
                        "description": "Sets the starting contour level value.",
                        "role": "style",
                        "valType": "number"
                    },
                    "end": {
                        "dflt": null,
                        "description": "Sets the end contour level value.",
                        "role": "style",
                        "valType": "number"
                    },
                    "coloring": {
                        "dflt": "fill",
                        "values": [
                            "fill",
                            "heatmap",
                            "lines",
                            "none"
                        ],
                        "description": "Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *heatmap*, a heatmap gradient is coloring is applied between each contour level. If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "showlines": {
                        "dflt": true,
                        "description": "Determines whether or not the contour lines are drawn. Has only an effect if `contours.coloring` is set to *fill*.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "size": {
                        "dflt": null,
                        "description": "Sets the step between each contour level.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "autocolorscale": {
                    "dflt": false,
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "valType": "boolean"
                }
            }
        },
        "contour": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "connectgaps": {
                    "dflt": false,
                    "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.",
                    "role": "info",
                    "valType": "boolean"
                },
                "colorscale": {
                    "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax",
                    "role": "style",
                    "valType": "colorscale"
                },
                "reversescale": {
                    "dflt": false,
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "valType": "boolean"
                },
                "xtype": {
                    "values": [
                        "array",
                        "scaled"
                    ],
                    "description": "If *array*, the heatmap's x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap's x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "colorbar": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "outlinecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "y": {
                        "role": "style",
                        "dflt": 0.5,
                        "max": 3,
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "len": {
                        "dflt": 1,
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "bgcolor": {
                        "dflt": "rgba(0,0,0,0)",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ypad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this color bar's title font."
                    },
                    "title": {
                        "dflt": "Click to enter colorscale title",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ],
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thickness": {
                        "dflt": 30,
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "ticks": {
                        "dflt": "",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "x": {
                        "role": "style",
                        "dflt": 1.02,
                        "max": 3,
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "xpad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ],
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titleside": {
                        "dflt": "top",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ],
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "bordercolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "outlinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "borderwidth": {
                        "dflt": 0,
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object"
                },
                "x0": {
                    "dflt": 0,
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "zauto": {
                    "dflt": true,
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "valType": "boolean"
                },
                "dx": {
                    "dflt": 1,
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "transpose": {
                    "dflt": false,
                    "description": "Transposes the z data.",
                    "role": "info",
                    "valType": "boolean"
                },
                "x": {
                    "description": "Sets the x coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "zmax": {
                    "dflt": null,
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "line": {
                    "color": {
                        "description": "Sets the color of the contour level. Has no if `contours.coloring` is set to *lines*.",
                        "role": "style",
                        "valType": "color"
                    },
                    "width": {
                        "dflt": 2,
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "smoothing": {
                        "role": "style",
                        "dflt": 1,
                        "max": 1.3,
                        "description": "Sets the amount of smoothing for the contour lines, where *0* corresponds to no smoothing.",
                        "valType": "number",
                        "min": 0
                    },
                    "dash": {
                        "dflt": "solid",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ],
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "valType": "string"
                    },
                    "role": "object"
                },
                "z": {
                    "description": "Sets the z data.",
                    "role": "data",
                    "valType": "data_array"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "description": "Sets the text elements associated with each z value.",
                    "role": "data",
                    "valType": "data_array"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "dy": {
                    "dflt": 1,
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "zsrc": {
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info",
                    "valType": "string"
                },
                "zmin": {
                    "dflt": null,
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "contour",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "ytype": {
                    "values": [
                        "array",
                        "scaled"
                    ],
                    "description": "If *array*, the heatmap's y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap's y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)",
                    "role": "info",
                    "valType": "enumerated"
                },
                "y0": {
                    "dflt": 0,
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "autocontour": {
                    "dflt": true,
                    "description": "Determines whether of not the contour level attributes at picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`.",
                    "role": "style",
                    "valType": "boolean"
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "y": {
                    "description": "Sets the y coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "showscale": {
                    "dflt": true,
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "valType": "boolean"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "ncontours": {
                    "dflt": 0,
                    "description": "Sets the number of contour levels.",
                    "role": "style",
                    "valType": "integer"
                },
                "contours": {
                    "start": {
                        "dflt": null,
                        "description": "Sets the starting contour level value.",
                        "role": "style",
                        "valType": "number"
                    },
                    "end": {
                        "dflt": null,
                        "description": "Sets the end contour level value.",
                        "role": "style",
                        "valType": "number"
                    },
                    "coloring": {
                        "dflt": "fill",
                        "values": [
                            "fill",
                            "heatmap",
                            "lines",
                            "none"
                        ],
                        "description": "Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *heatmap*, a heatmap gradient is coloring is applied between each contour level. If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "showlines": {
                        "dflt": true,
                        "description": "Determines whether or not the contour lines are drawn. Has only an effect if `contours.coloring` is set to *fill*.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "size": {
                        "dflt": null,
                        "description": "Sets the step between each contour level.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "autocolorscale": {
                    "dflt": false,
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "valType": "boolean"
                }
            },
            "description": "The data from which contour lines are computed is set in `z`. Data in `z` must be a {2D array} of numbers. Say that `z` has N rows and M columns, then by default, these N rows correspond to N y coordinates (set in `y` or auto-generated) and the M columns correspond to M x coordinates (set in `x` or auto-generated). By setting `transpose` to *true*, the above behavior is flipped."
        },
        "bar": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "error_y": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "t": {
                    "description": "For polar chart only.Sets the angular coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "tsrc": {
                    "description": "Sets the source reference on plot.ly for  t .",
                    "role": "info",
                    "valType": "string"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "error_x": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "r": {
                    "description": "For polar chart only.Sets the radial coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "x0": {
                    "dflt": 0,
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "dx": {
                    "dflt": 1,
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "x": {
                    "description": "Sets the x coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "marker": {
                    "colorbar": {
                        "tickwidth": {
                            "dflt": 1,
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "outlinecolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "y": {
                            "role": "style",
                            "dflt": 0.5,
                            "max": 3,
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tickfont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets the tick font."
                        },
                        "len": {
                            "dflt": 1,
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showexponent": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tick0": {
                            "dflt": 0,
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "valType": "number"
                        },
                        "ticktext": {
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "ticklen": {
                            "dflt": 5,
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "bgcolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "valType": "color"
                        },
                        "ypad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "ticktextsrc": {
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titlefont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets this color bar's title font."
                        },
                        "title": {
                            "dflt": "Click to enter colorscale title",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "valType": "string"
                        },
                        "tickmode": {
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ],
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ],
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thickness": {
                            "dflt": 30,
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickangle": {
                            "dflt": "auto",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "valType": "angle"
                        },
                        "dtick": {
                            "dflt": 1,
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "valType": "any"
                        },
                        "tickformat": {
                            "dflt": "",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickcolor": {
                            "dflt": "#444",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "ticks": {
                            "dflt": "",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ],
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "x": {
                            "role": "style",
                            "dflt": 1.02,
                            "max": 3,
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "xpad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "nticks": {
                            "dflt": 0,
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "valType": "integer",
                            "min": 0
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ],
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "ticksuffix": {
                            "dflt": "",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvalssrc": {
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titleside": {
                            "dflt": "top",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ],
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "bordercolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "showticklabels": {
                            "dflt": true,
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "outlinewidth": {
                            "dflt": 1,
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickprefix": {
                            "dflt": "",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvals": {
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "borderwidth": {
                            "dflt": 0,
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ],
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "role": "object"
                    },
                    "reversescale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "cmin": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "colorscale": {
                        "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use cmin and cmax",
                        "role": "style",
                        "valType": "colorscale"
                    },
                    "cmax": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "cauto": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "showscale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object",
                    "color": {
                        "arrayOk": true,
                        "description": "Sets the marker color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "line": {
                        "reversescale": {
                            "dflt": false,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "width": {
                            "arrayOk": true,
                            "min": 0,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "valType": "number",
                            "role": "style"
                        },
                        "colorscale": {
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style",
                            "valType": "colorscale"
                        },
                        "colorsrc": {
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info",
                            "valType": "string"
                        },
                        "role": "object",
                        "cauto": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "color": {
                            "arrayOk": true,
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "valType": "color"
                        },
                        "widthsrc": {
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info",
                            "valType": "string"
                        },
                        "cmin": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "cmax": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "autocolorscale": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "valType": "boolean"
                        }
                    },
                    "autocolorscale": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "valType": "boolean"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "dflt": "",
                    "arrayOk": true,
                    "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates.",
                    "role": "info",
                    "valType": "string"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "bar",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "rsrc": {
                    "description": "Sets the source reference on plot.ly for  r .",
                    "role": "info",
                    "valType": "string"
                },
                "y0": {
                    "dflt": 0,
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "_deprecated": {
                    "bardir": {
                        "values": [
                            "v",
                            "h"
                        ],
                        "description": "Renamed to `orientation`.",
                        "role": "info",
                        "valType": "enumerated"
                    }
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "y": {
                    "description": "Sets the y coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "orientation": {
                    "values": [
                        "v",
                        "h"
                    ],
                    "description": "Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "dy": {
                    "dflt": 1,
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "valType": "number"
                }
            },
            "layoutAttributes": {
                "barmode": {
                    "dflt": "group",
                    "values": [
                        "stack",
                        "group",
                        "overlay"
                    ],
                    "description": "Determines how bars at the same location coordinate are displayed on the graph. With *stack*, the bars are stacked on top of one another With *group*, the bars are plotted next to one another centered around the shared location. With *overlay*, the bars are plotted over one another, you might need to an *opacity* to see multiple bars.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "barnorm": {
                    "dflt": "",
                    "values": [
                        "",
                        "fraction",
                        "percent"
                    ],
                    "description": "Sets the normalization for bar traces on the graph. With *fraction*, the value of each bar is divide by the sum of the values at the location coordinate. With *percent*, the results form *fraction* are presented in percents.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "bargroupgap": {
                    "role": "style",
                    "dflt": 0,
                    "max": 1,
                    "description": "Sets the gap (in plot fraction) between bars of the same location coordinate.",
                    "valType": "number",
                    "min": 0
                },
                "bargap": {
                    "max": 1,
                    "description": "Sets the gap (in plot fraction) between bars of adjacent location coordinates.",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                }
            },
            "description": "The data visualized by the span of the bars is set in `y` if `orientation` is set th *v* (the default) and the labels are set in `x`. By setting `orientation` to *h*, the roles are interchanged."
        },
        "scatter": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "connectgaps": {
                    "dflt": false,
                    "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected.",
                    "role": "info",
                    "valType": "boolean"
                },
                "error_y": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "fillcolor": {
                    "description": "Sets the fill color.",
                    "role": "style",
                    "valType": "color"
                },
                "t": {
                    "description": "For polar chart only.Sets the angular coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "tsrc": {
                    "description": "Sets the source reference on plot.ly for  t .",
                    "role": "info",
                    "valType": "string"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "error_x": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "r": {
                    "description": "For polar chart only.Sets the radial coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "x0": {
                    "dflt": 0,
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "dx": {
                    "dflt": 1,
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "x": {
                    "description": "Sets the x coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "mode": {
                    "flags": [
                        "lines",
                        "markers",
                        "text"
                    ],
                    "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.",
                    "extras": [
                        "none"
                    ],
                    "role": "info",
                    "valType": "flaglist"
                },
                "textposition": {
                    "values": [
                        "top left",
                        "top center",
                        "top right",
                        "middle left",
                        "middle center",
                        "middle right",
                        "bottom left",
                        "bottom center",
                        "bottom right"
                    ],
                    "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates.",
                    "dflt": "middle center",
                    "arrayOk": true,
                    "valType": "enumerated",
                    "role": "style"
                },
                "textpositionsrc": {
                    "description": "Sets the source reference on plot.ly for  textposition .",
                    "role": "info",
                    "valType": "string"
                },
                "line": {
                    "smoothing": {
                        "role": "style",
                        "dflt": 1,
                        "max": 1.3,
                        "description": "Has only an effect if `shape` is set to *spline* Sets the amount of smoothing. *0* corresponds to no smoothing (equivalent to a *linear* shape).",
                        "valType": "number",
                        "min": 0
                    },
                    "shape": {
                        "dflt": "linear",
                        "values": [
                            "linear",
                            "spline",
                            "hv",
                            "vh",
                            "hvh",
                            "vhv"
                        ],
                        "description": "Determines the line shape. With *spline* the lines are drawn using spline interpolation. The other available values correspond to step-wise line shapes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object",
                    "width": {
                        "dflt": 2,
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "dash": {
                        "dflt": "solid",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ],
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "valType": "string"
                    }
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "textfont": {
                    "family": {
                        "noBlank": true,
                        "arrayOk": true,
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "sizesrc": {
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object",
                    "description": "Sets the text font.",
                    "familysrc": {
                        "description": "Sets the source reference on plot.ly for  family .",
                        "role": "info",
                        "valType": "string"
                    },
                    "color": {
                        "arrayOk": true,
                        "role": "style",
                        "valType": "color"
                    },
                    "size": {
                        "arrayOk": true,
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    }
                },
                "marker": {
                    "colorscale": {
                        "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use cmin and cmax",
                        "role": "style",
                        "valType": "colorscale"
                    },
                    "reversescale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "sizeref": {
                        "dflt": 1,
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.",
                        "role": "style",
                        "valType": "number"
                    },
                    "size": {
                        "role": "style",
                        "dflt": 6,
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "valType": "number",
                        "min": 0
                    },
                    "opacitysrc": {
                        "description": "Sets the source reference on plot.ly for  opacity .",
                        "role": "info",
                        "valType": "string"
                    },
                    "cmin": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "cmax": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "sizemode": {
                        "dflt": "diameter",
                        "values": [
                            "diameter",
                            "area"
                        ],
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "showscale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object",
                    "color": {
                        "arrayOk": true,
                        "description": "Sets the marker color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "line": {
                        "reversescale": {
                            "dflt": false,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "width": {
                            "arrayOk": true,
                            "min": 0,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "valType": "number",
                            "role": "style"
                        },
                        "colorscale": {
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style",
                            "valType": "colorscale"
                        },
                        "colorsrc": {
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info",
                            "valType": "string"
                        },
                        "role": "object",
                        "cauto": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "color": {
                            "arrayOk": true,
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "valType": "color"
                        },
                        "widthsrc": {
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info",
                            "valType": "string"
                        },
                        "cmin": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "cmax": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "autocolorscale": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "valType": "boolean"
                        }
                    },
                    "symbolsrc": {
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info",
                        "valType": "string"
                    },
                    "colorbar": {
                        "tickwidth": {
                            "dflt": 1,
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "outlinecolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "y": {
                            "role": "style",
                            "dflt": 0.5,
                            "max": 3,
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tickfont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets the tick font."
                        },
                        "len": {
                            "dflt": 1,
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showexponent": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tick0": {
                            "dflt": 0,
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "valType": "number"
                        },
                        "ticktext": {
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "ticklen": {
                            "dflt": 5,
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "bgcolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "valType": "color"
                        },
                        "ypad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "ticktextsrc": {
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titlefont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets this color bar's title font."
                        },
                        "title": {
                            "dflt": "Click to enter colorscale title",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "valType": "string"
                        },
                        "tickmode": {
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ],
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ],
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thickness": {
                            "dflt": 30,
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickangle": {
                            "dflt": "auto",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "valType": "angle"
                        },
                        "dtick": {
                            "dflt": 1,
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "valType": "any"
                        },
                        "tickformat": {
                            "dflt": "",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickcolor": {
                            "dflt": "#444",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "ticks": {
                            "dflt": "",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ],
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "x": {
                            "role": "style",
                            "dflt": 1.02,
                            "max": 3,
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "xpad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "nticks": {
                            "dflt": 0,
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "valType": "integer",
                            "min": 0
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ],
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "ticksuffix": {
                            "dflt": "",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvalssrc": {
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titleside": {
                            "dflt": "top",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ],
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "bordercolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "showticklabels": {
                            "dflt": true,
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "outlinewidth": {
                            "dflt": 1,
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickprefix": {
                            "dflt": "",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvals": {
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "borderwidth": {
                            "dflt": 0,
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ],
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "role": "object"
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "sizesrc": {
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info",
                        "valType": "string"
                    },
                    "opacity": {
                        "role": "style",
                        "description": "Sets the marker opacity.",
                        "max": 1,
                        "arrayOk": true,
                        "valType": "number",
                        "min": 0
                    },
                    "symbol": {
                        "values": [
                            0,
                            "circle",
                            100,
                            "circle-open",
                            200,
                            "circle-dot",
                            300,
                            "circle-open-dot",
                            1,
                            "square",
                            101,
                            "square-open",
                            201,
                            "square-dot",
                            301,
                            "square-open-dot",
                            2,
                            "diamond",
                            102,
                            "diamond-open",
                            202,
                            "diamond-dot",
                            302,
                            "diamond-open-dot",
                            3,
                            "cross",
                            103,
                            "cross-open",
                            203,
                            "cross-dot",
                            303,
                            "cross-open-dot",
                            4,
                            "x",
                            104,
                            "x-open",
                            204,
                            "x-dot",
                            304,
                            "x-open-dot",
                            5,
                            "triangle-up",
                            105,
                            "triangle-up-open",
                            205,
                            "triangle-up-dot",
                            305,
                            "triangle-up-open-dot",
                            6,
                            "triangle-down",
                            106,
                            "triangle-down-open",
                            206,
                            "triangle-down-dot",
                            306,
                            "triangle-down-open-dot",
                            7,
                            "triangle-left",
                            107,
                            "triangle-left-open",
                            207,
                            "triangle-left-dot",
                            307,
                            "triangle-left-open-dot",
                            8,
                            "triangle-right",
                            108,
                            "triangle-right-open",
                            208,
                            "triangle-right-dot",
                            308,
                            "triangle-right-open-dot",
                            9,
                            "triangle-ne",
                            109,
                            "triangle-ne-open",
                            209,
                            "triangle-ne-dot",
                            309,
                            "triangle-ne-open-dot",
                            10,
                            "triangle-se",
                            110,
                            "triangle-se-open",
                            210,
                            "triangle-se-dot",
                            310,
                            "triangle-se-open-dot",
                            11,
                            "triangle-sw",
                            111,
                            "triangle-sw-open",
                            211,
                            "triangle-sw-dot",
                            311,
                            "triangle-sw-open-dot",
                            12,
                            "triangle-nw",
                            112,
                            "triangle-nw-open",
                            212,
                            "triangle-nw-dot",
                            312,
                            "triangle-nw-open-dot",
                            13,
                            "pentagon",
                            113,
                            "pentagon-open",
                            213,
                            "pentagon-dot",
                            313,
                            "pentagon-open-dot",
                            14,
                            "hexagon",
                            114,
                            "hexagon-open",
                            214,
                            "hexagon-dot",
                            314,
                            "hexagon-open-dot",
                            15,
                            "hexagon2",
                            115,
                            "hexagon2-open",
                            215,
                            "hexagon2-dot",
                            315,
                            "hexagon2-open-dot",
                            16,
                            "octagon",
                            116,
                            "octagon-open",
                            216,
                            "octagon-dot",
                            316,
                            "octagon-open-dot",
                            17,
                            "star",
                            117,
                            "star-open",
                            217,
                            "star-dot",
                            317,
                            "star-open-dot",
                            18,
                            "hexagram",
                            118,
                            "hexagram-open",
                            218,
                            "hexagram-dot",
                            318,
                            "hexagram-open-dot",
                            19,
                            "star-triangle-up",
                            119,
                            "star-triangle-up-open",
                            219,
                            "star-triangle-up-dot",
                            319,
                            "star-triangle-up-open-dot",
                            20,
                            "star-triangle-down",
                            120,
                            "star-triangle-down-open",
                            220,
                            "star-triangle-down-dot",
                            320,
                            "star-triangle-down-open-dot",
                            21,
                            "star-square",
                            121,
                            "star-square-open",
                            221,
                            "star-square-dot",
                            321,
                            "star-square-open-dot",
                            22,
                            "star-diamond",
                            122,
                            "star-diamond-open",
                            222,
                            "star-diamond-dot",
                            322,
                            "star-diamond-open-dot",
                            23,
                            "diamond-tall",
                            123,
                            "diamond-tall-open",
                            223,
                            "diamond-tall-dot",
                            323,
                            "diamond-tall-open-dot",
                            24,
                            "diamond-wide",
                            124,
                            "diamond-wide-open",
                            224,
                            "diamond-wide-dot",
                            324,
                            "diamond-wide-open-dot",
                            25,
                            "hourglass",
                            125,
                            "hourglass-open",
                            26,
                            "bowtie",
                            126,
                            "bowtie-open",
                            27,
                            "circle-cross",
                            127,
                            "circle-cross-open",
                            28,
                            "circle-x",
                            128,
                            "circle-x-open",
                            29,
                            "square-cross",
                            129,
                            "square-cross-open",
                            30,
                            "square-x",
                            130,
                            "square-x-open",
                            31,
                            "diamond-cross",
                            131,
                            "diamond-cross-open",
                            32,
                            "diamond-x",
                            132,
                            "diamond-x-open",
                            33,
                            "cross-thin",
                            133,
                            "cross-thin-open",
                            34,
                            "x-thin",
                            134,
                            "x-thin-open",
                            35,
                            "asterisk",
                            135,
                            "asterisk-open",
                            36,
                            "hash",
                            136,
                            "hash-open",
                            236,
                            "hash-dot",
                            336,
                            "hash-open-dot",
                            37,
                            "y-up",
                            137,
                            "y-up-open",
                            38,
                            "y-down",
                            138,
                            "y-down-open",
                            39,
                            "y-left",
                            139,
                            "y-left-open",
                            40,
                            "y-right",
                            140,
                            "y-right-open",
                            41,
                            "line-ew",
                            141,
                            "line-ew-open",
                            42,
                            "line-ns",
                            142,
                            "line-ns-open",
                            43,
                            "line-ne",
                            143,
                            "line-ne-open",
                            44,
                            "line-nw",
                            144,
                            "line-nw-open"
                        ],
                        "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.",
                        "dflt": "circle",
                        "arrayOk": true,
                        "valType": "enumerated",
                        "role": "style"
                    },
                    "sizemin": {
                        "dflt": 0,
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "cauto": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "maxdisplayed": {
                        "dflt": 0,
                        "description": "Sets a maximum number of points to be drawn on the graph. *0* corresponds to no limit.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "autocolorscale": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "valType": "boolean"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "dflt": "",
                    "arrayOk": true,
                    "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates.",
                    "role": "info",
                    "valType": "string"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "scatter",
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "rsrc": {
                    "description": "Sets the source reference on plot.ly for  r .",
                    "role": "info",
                    "valType": "string"
                },
                "y0": {
                    "dflt": 0,
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "dy": {
                    "dflt": 1,
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "y": {
                    "description": "Sets the y coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "fill": {
                    "dflt": "none",
                    "values": [
                        "none",
                        "tozeroy",
                        "tozerox",
                        "tonexty",
                        "tonextx"
                    ],
                    "description": "Sets the area to fill with a solid color. Use with `fillcolor`.",
                    "role": "style",
                    "valType": "enumerated"
                }
            },
            "description": "The scatter trace type encompasses line charts, scatter charts, text charts, and bubble charts. The data visualized as scatter point or lines is set in `x` and `y`. Text (appearing either on the chart or on hover only) is via `text`. Bubble charts are achieved by setting `marker.size` and/or `marker.color` to a numerical arrays."
        },
        "mesh3d": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "colorscale": {
                    "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax",
                    "role": "style",
                    "valType": "colorscale"
                },
                "facecolor": {
                    "description": "Sets the color of each face Overrides *color* and *vertexcolor*.",
                    "role": "data",
                    "valType": "data_array"
                },
                "ksrc": {
                    "description": "Sets the source reference on plot.ly for  k .",
                    "role": "info",
                    "valType": "string"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "vertexcolor": {
                    "description": "Sets the color of each vertex Overrides *color*.",
                    "role": "data",
                    "valType": "data_array"
                },
                "jsrc": {
                    "description": "Sets the source reference on plot.ly for  j .",
                    "role": "info",
                    "valType": "string"
                },
                "colorbar": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "outlinecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "y": {
                        "role": "style",
                        "dflt": 0.5,
                        "max": 3,
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "len": {
                        "dflt": 1,
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "bgcolor": {
                        "dflt": "rgba(0,0,0,0)",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ypad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this color bar's title font."
                    },
                    "title": {
                        "dflt": "Click to enter colorscale title",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ],
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thickness": {
                        "dflt": 30,
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "ticks": {
                        "dflt": "",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "x": {
                        "role": "style",
                        "dflt": 1.02,
                        "max": 3,
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "xpad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ],
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titleside": {
                        "dflt": "top",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ],
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "bordercolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "outlinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "borderwidth": {
                        "dflt": 0,
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object"
                },
                "delaunayaxis": {
                    "dflt": "z",
                    "values": [
                        "x",
                        "y",
                        "z"
                    ],
                    "description": "Sets the Delaunay axis from which the triangulation of the mesh takes place. An alternative to setting the `i`, `j`, `k` indices triplets.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "j": {
                    "description": "Sets the indices of y coordinates of the vertices",
                    "role": "data",
                    "valType": "data_array"
                },
                "showscale": {
                    "dflt": true,
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "valType": "boolean"
                },
                "facecolorsrc": {
                    "description": "Sets the source reference on plot.ly for  facecolor .",
                    "role": "info",
                    "valType": "string"
                },
                "isrc": {
                    "description": "Sets the source reference on plot.ly for  i .",
                    "role": "info",
                    "valType": "string"
                },
                "color": {
                    "description": "Sets the color of the whole mesh",
                    "role": "style",
                    "valType": "color"
                },
                "flatshading": {
                    "dflt": false,
                    "description": "Determines whether or not normal smoothing is applied to the meshes, creating meshes with a low-poly look.",
                    "role": "style",
                    "valType": "boolean"
                },
                "z": {
                    "description": "Sets the z coordinates of the vertices",
                    "role": "data",
                    "valType": "data_array"
                },
                "lighting": {
                    "roughness": {
                        "dflt": 0.5,
                        "max": 1,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "role": "object",
                    "ambient": {
                        "dflt": 0.8,
                        "max": 1,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "diffuse": {
                        "dflt": 0.8,
                        "max": 1,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "fresnel": {
                        "dflt": 0.2,
                        "max": 5,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "specular": {
                        "dflt": 0.05,
                        "max": 2,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    }
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "vertexcolorsrc": {
                    "description": "Sets the source reference on plot.ly for  vertexcolor .",
                    "role": "info",
                    "valType": "string"
                },
                "scene": {
                    "dflt": "scene",
                    "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.",
                    "role": "info",
                    "valType": "sceneid"
                },
                "intensitysrc": {
                    "description": "Sets the source reference on plot.ly for  intensity .",
                    "role": "info",
                    "valType": "string"
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "zsrc": {
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info",
                    "valType": "string"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "intensity": {
                    "description": "Sets the vertex intensity values, used for plotting fields on meshes",
                    "role": "data",
                    "valType": "data_array"
                },
                "type": "mesh3d",
                "contour": {
                    "color": {
                        "dflt": "#000",
                        "role": "style",
                        "valType": "color"
                    },
                    "width": {
                        "dflt": 2,
                        "max": 16,
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    },
                    "role": "object",
                    "show": {
                        "dflt": false,
                        "description": "Sets whether or not dynamic contours are shown on hover",
                        "role": "info",
                        "valType": "boolean"
                    }
                },
                "reversescale": {
                    "dflt": false,
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "valType": "boolean"
                },
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "k": {
                    "description": "Sets the indices of z coordinates of the vertices",
                    "role": "data",
                    "valType": "data_array"
                },
                "y": {
                    "description": "Sets the y coordinates of the vertices",
                    "role": "data",
                    "valType": "data_array"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "alphahull": {
                    "dflt": -1,
                    "description": "Sets the shape of the mesh If *-1*, Delaunay triangulation is used If *>0*, the alpha-shape algorithm is used If *0*,  the convex-hull algorithm is used An alternative to the `i`, `j`, `k` indices triplets.",
                    "role": "style",
                    "valType": "number"
                },
                "i": {
                    "description": "Sets the indices of x coordinates of the vertices",
                    "role": "data",
                    "valType": "data_array"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "x": {
                    "description": "Sets the x coordinates of the vertices",
                    "role": "data",
                    "valType": "data_array"
                }
            },
            "description": "Draws sets of triangles with coordinates given by three 1-dimensional arrays in `x`, `y`, `z` and (1) a sets of `i`, `j`, `k` indices (2) Delaunay triangulation or (3) the Alpha-shape algorithm or (4) the Convex-hull algorithm"
        },
        "scattergl": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "error_y": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "fillcolor": {
                    "description": "Sets the fill color.",
                    "role": "style",
                    "valType": "color"
                },
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "error_x": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "x0": {
                    "dflt": 0,
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "dx": {
                    "dflt": 1,
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "x": {
                    "description": "Sets the x coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "mode": {
                    "flags": [
                        "lines",
                        "markers"
                    ],
                    "description": "Determines the drawing mode for this scatter trace.",
                    "extras": [
                        "none"
                    ],
                    "role": "info",
                    "valType": "flaglist"
                },
                "line": {
                    "color": {
                        "description": "Sets the line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "width": {
                        "dflt": 2,
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "dash": {
                        "dflt": "solid",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ],
                        "description": "Sets the style of the lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "marker": {
                    "sizemin": {
                        "dflt": 0,
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "colorbar": {
                        "tickwidth": {
                            "dflt": 1,
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "outlinecolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "y": {
                            "role": "style",
                            "dflt": 0.5,
                            "max": 3,
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tickfont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets the tick font."
                        },
                        "len": {
                            "dflt": 1,
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showexponent": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tick0": {
                            "dflt": 0,
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "valType": "number"
                        },
                        "ticktext": {
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "ticklen": {
                            "dflt": 5,
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "bgcolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "valType": "color"
                        },
                        "ypad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "ticktextsrc": {
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titlefont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets this color bar's title font."
                        },
                        "title": {
                            "dflt": "Click to enter colorscale title",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "valType": "string"
                        },
                        "tickmode": {
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ],
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ],
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thickness": {
                            "dflt": 30,
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickangle": {
                            "dflt": "auto",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "valType": "angle"
                        },
                        "dtick": {
                            "dflt": 1,
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "valType": "any"
                        },
                        "tickformat": {
                            "dflt": "",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickcolor": {
                            "dflt": "#444",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "ticks": {
                            "dflt": "",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ],
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "x": {
                            "role": "style",
                            "dflt": 1.02,
                            "max": 3,
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "xpad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "nticks": {
                            "dflt": 0,
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "valType": "integer",
                            "min": 0
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ],
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "ticksuffix": {
                            "dflt": "",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvalssrc": {
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titleside": {
                            "dflt": "top",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ],
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "bordercolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "showticklabels": {
                            "dflt": true,
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "outlinewidth": {
                            "dflt": 1,
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickprefix": {
                            "dflt": "",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvals": {
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "borderwidth": {
                            "dflt": 0,
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ],
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "role": "object"
                    },
                    "reversescale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "sizesrc": {
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info",
                        "valType": "string"
                    },
                    "sizeref": {
                        "dflt": 1,
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.",
                        "role": "style",
                        "valType": "number"
                    },
                    "size": {
                        "role": "style",
                        "dflt": 6,
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "valType": "number",
                        "min": 0
                    },
                    "cauto": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "opacitysrc": {
                        "description": "Sets the source reference on plot.ly for  opacity .",
                        "role": "info",
                        "valType": "string"
                    },
                    "cmin": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "colorscale": {
                        "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use cmin and cmax",
                        "role": "style",
                        "valType": "colorscale"
                    },
                    "cmax": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "showscale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "opacity": {
                        "role": "style",
                        "description": "Sets the marker opacity.",
                        "max": 1,
                        "arrayOk": true,
                        "valType": "number",
                        "min": 0
                    },
                    "sizemode": {
                        "dflt": "diameter",
                        "values": [
                            "diameter",
                            "area"
                        ],
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object",
                    "color": {
                        "arrayOk": true,
                        "description": "Sets the marker color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "line": {
                        "reversescale": {
                            "dflt": false,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "width": {
                            "arrayOk": true,
                            "min": 0,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "valType": "number",
                            "role": "style"
                        },
                        "colorscale": {
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style",
                            "valType": "colorscale"
                        },
                        "colorsrc": {
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info",
                            "valType": "string"
                        },
                        "role": "object",
                        "cauto": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "color": {
                            "arrayOk": true,
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "valType": "color"
                        },
                        "widthsrc": {
                            "description": "Sets the source reference on plot.ly for  width .",
                            "role": "info",
                            "valType": "string"
                        },
                        "cmin": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "cmax": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "autocolorscale": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "valType": "boolean"
                        }
                    },
                    "symbolsrc": {
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symbol": {
                        "values": [
                            "circle",
                            "circle-open",
                            "square",
                            "square-open",
                            "diamond",
                            "diamond-open",
                            "cross",
                            "x"
                        ],
                        "description": "Sets the marker symbol type.",
                        "dflt": "circle",
                        "arrayOk": true,
                        "valType": "enumerated",
                        "role": "style"
                    },
                    "autocolorscale": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "valType": "boolean"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "dflt": "",
                    "arrayOk": true,
                    "description": "Sets text elements associated with each (x,y) pair to appear on hover. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates.",
                    "role": "info",
                    "valType": "string"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "scattergl",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "y0": {
                    "dflt": 0,
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "dy": {
                    "dflt": 1,
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "y": {
                    "description": "Sets the y coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "fill": {
                    "dflt": "none",
                    "values": [
                        "none",
                        "tozeroy",
                        "tozerox"
                    ],
                    "description": "Sets the area to fill with a solid color. Use with `fillcolor`.",
                    "role": "style",
                    "valType": "enumerated"
                }
            },
            "description": "The data visualized as scatter point or lines is set in `x` and `y` using the WebGl plotting engine. Bubble charts are achieved by setting `marker.size` and/or `marker.color` to a numerical arrays."
        },
        "scatter3d": {
            "hrName": "scatter_3d",
            "description": "The data visualized as scatter point or lines in 3D dimension is set in `x`, `y`, `z`. Text (appearing either on the chart or on hover only) is via `text`. Bubble charts are achieved by setting `marker.size` and/or `marker.color` Projections are achieved via `projection`. Surface fills are achieved via `surfaceaxis`.",
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "error_y": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "error_x": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "projection": {
                    "y": {
                        "show": {
                            "dflt": false,
                            "description": "Sets whether or not projections are shown along the y axis.",
                            "role": "info",
                            "valType": "boolean"
                        },
                        "opacity": {
                            "role": "style",
                            "dflt": 1,
                            "max": 1,
                            "description": "Sets the projection color.",
                            "valType": "number",
                            "min": 0
                        },
                        "scale": {
                            "role": "style",
                            "dflt": 0.6666666666666666,
                            "max": 10,
                            "description": "Sets the scale factor determining the size of the projection marker points.",
                            "valType": "number",
                            "min": 0
                        },
                        "role": "object"
                    },
                    "z": {
                        "show": {
                            "dflt": false,
                            "description": "Sets whether or not projections are shown along the z axis.",
                            "role": "info",
                            "valType": "boolean"
                        },
                        "opacity": {
                            "role": "style",
                            "dflt": 1,
                            "max": 1,
                            "description": "Sets the projection color.",
                            "valType": "number",
                            "min": 0
                        },
                        "scale": {
                            "role": "style",
                            "dflt": 0.6666666666666666,
                            "max": 10,
                            "description": "Sets the scale factor determining the size of the projection marker points.",
                            "valType": "number",
                            "min": 0
                        },
                        "role": "object"
                    },
                    "role": "object",
                    "x": {
                        "show": {
                            "dflt": false,
                            "description": "Sets whether or not projections are shown along the x axis.",
                            "role": "info",
                            "valType": "boolean"
                        },
                        "opacity": {
                            "role": "style",
                            "dflt": 1,
                            "max": 1,
                            "description": "Sets the projection color.",
                            "valType": "number",
                            "min": 0
                        },
                        "scale": {
                            "role": "style",
                            "dflt": 0.6666666666666666,
                            "max": 10,
                            "description": "Sets the scale factor determining the size of the projection marker points.",
                            "valType": "number",
                            "min": 0
                        },
                        "role": "object"
                    }
                },
                "x": {
                    "description": "Sets the x coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "mode": {
                    "flags": [
                        "lines",
                        "markers",
                        "text"
                    ],
                    "extras": [
                        "none"
                    ],
                    "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.",
                    "dflt": "lines+markers",
                    "valType": "flaglist",
                    "role": "info"
                },
                "textposition": {
                    "values": [
                        "top left",
                        "top center",
                        "top right",
                        "middle left",
                        "middle center",
                        "middle right",
                        "bottom left",
                        "bottom center",
                        "bottom right"
                    ],
                    "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates.",
                    "dflt": "top center",
                    "arrayOk": true,
                    "valType": "enumerated",
                    "role": "style"
                },
                "textpositionsrc": {
                    "description": "Sets the source reference on plot.ly for  textposition .",
                    "role": "info",
                    "valType": "string"
                },
                "textfont": {
                    "family": {
                        "noBlank": true,
                        "arrayOk": true,
                        "role": "style",
                        "valType": "string",
                        "strict": true
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "sizesrc": {
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object",
                    "description": "Sets the text font.",
                    "familysrc": {
                        "description": "Sets the source reference on plot.ly for  family .",
                        "role": "info",
                        "valType": "string"
                    },
                    "color": {
                        "arrayOk": true,
                        "role": "style",
                        "valType": "color"
                    },
                    "size": {
                        "arrayOk": true,
                        "role": "style",
                        "valType": "number",
                        "min": 1
                    }
                },
                "z": {
                    "description": "Sets the z coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "scene": {
                    "dflt": "scene",
                    "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.",
                    "role": "info",
                    "valType": "sceneid"
                },
                "marker": {
                    "sizemin": {
                        "dflt": 0,
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "colorbar": {
                        "tickwidth": {
                            "dflt": 1,
                            "description": "Sets the tick width (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showtickprefix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "outlinecolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "y": {
                            "role": "style",
                            "dflt": 0.5,
                            "max": 3,
                            "description": "Sets the y position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "showticksuffix": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "Same as `showtickprefix` but for tick suffixes.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tickfont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets the tick font."
                        },
                        "len": {
                            "dflt": 1,
                            "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "showexponent": {
                            "dflt": "all",
                            "values": [
                                "all",
                                "first",
                                "last",
                                "none"
                            ],
                            "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "tick0": {
                            "dflt": 0,
                            "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                            "role": "style",
                            "valType": "number"
                        },
                        "ticktext": {
                            "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "ticklen": {
                            "dflt": 5,
                            "description": "Sets the tick length (in px).",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "bgcolor": {
                            "dflt": "rgba(0,0,0,0)",
                            "description": "Sets the color of padded area.",
                            "role": "style",
                            "valType": "color"
                        },
                        "ypad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the y direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "ticktextsrc": {
                            "description": "Sets the source reference on plot.ly for  ticktext .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titlefont": {
                            "color": {
                                "role": "style",
                                "valType": "color"
                            },
                            "family": {
                                "noBlank": true,
                                "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                                "role": "style",
                                "valType": "string",
                                "strict": true
                            },
                            "size": {
                                "role": "style",
                                "valType": "number",
                                "min": 1
                            },
                            "role": "object",
                            "description": "Sets this color bar's title font."
                        },
                        "title": {
                            "dflt": "Click to enter colorscale title",
                            "description": "Sets the title of the color bar.",
                            "role": "info",
                            "valType": "string"
                        },
                        "tickmode": {
                            "values": [
                                "auto",
                                "linear",
                                "array"
                            ],
                            "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "xanchor": {
                            "dflt": "left",
                            "values": [
                                "left",
                                "center",
                                "right"
                            ],
                            "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thickness": {
                            "dflt": 30,
                            "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickangle": {
                            "dflt": "auto",
                            "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                            "role": "style",
                            "valType": "angle"
                        },
                        "dtick": {
                            "dflt": 1,
                            "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                            "role": "style",
                            "valType": "any"
                        },
                        "tickformat": {
                            "dflt": "",
                            "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickcolor": {
                            "dflt": "#444",
                            "description": "Sets the tick color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "lenmode": {
                            "dflt": "fraction",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                            "role": "info",
                            "valType": "enumerated"
                        },
                        "ticks": {
                            "dflt": "",
                            "values": [
                                "outside",
                                "inside",
                                ""
                            ],
                            "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "thicknessmode": {
                            "dflt": "pixels",
                            "values": [
                                "fraction",
                                "pixels"
                            ],
                            "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "x": {
                            "role": "style",
                            "dflt": 1.02,
                            "max": 3,
                            "description": "Sets the x position of the color bar (in plot fraction).",
                            "valType": "number",
                            "min": -2
                        },
                        "xpad": {
                            "dflt": 10,
                            "description": "Sets the amount of padding (in px) along the x direction.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "nticks": {
                            "dflt": 0,
                            "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                            "role": "style",
                            "valType": "integer",
                            "min": 0
                        },
                        "yanchor": {
                            "dflt": "middle",
                            "values": [
                                "top",
                                "middle",
                                "bottom"
                            ],
                            "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "ticksuffix": {
                            "dflt": "",
                            "description": "Sets a tick label suffix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvalssrc": {
                            "description": "Sets the source reference on plot.ly for  tickvals .",
                            "role": "info",
                            "valType": "string"
                        },
                        "titleside": {
                            "dflt": "top",
                            "values": [
                                "right",
                                "top",
                                "bottom"
                            ],
                            "description": "Determines the location of the colorbar title with respect to the color bar.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "bordercolor": {
                            "dflt": "#444",
                            "description": "Sets the axis line color.",
                            "role": "style",
                            "valType": "color"
                        },
                        "showticklabels": {
                            "dflt": true,
                            "description": "Determines whether or not the tick labels are drawn.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "outlinewidth": {
                            "dflt": 1,
                            "description": "Sets the width (in px) of the axis line.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "tickprefix": {
                            "dflt": "",
                            "description": "Sets a tick label prefix.",
                            "role": "style",
                            "valType": "string"
                        },
                        "tickvals": {
                            "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                            "role": "data",
                            "valType": "data_array"
                        },
                        "borderwidth": {
                            "dflt": 0,
                            "description": "Sets the width (in px) or the border enclosing this color bar.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "exponentformat": {
                            "dflt": "B",
                            "values": [
                                "none",
                                "e",
                                "E",
                                "power",
                                "SI",
                                "B"
                            ],
                            "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                            "role": "style",
                            "valType": "enumerated"
                        },
                        "role": "object"
                    },
                    "reversescale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "sizesrc": {
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info",
                        "valType": "string"
                    },
                    "sizeref": {
                        "dflt": 1,
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.",
                        "role": "style",
                        "valType": "number"
                    },
                    "size": {
                        "role": "style",
                        "dflt": 8,
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "valType": "number",
                        "min": 0
                    },
                    "cauto": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "symbol": {
                        "values": [
                            "circle",
                            "circle-open",
                            "square",
                            "square-open",
                            "diamond",
                            "diamond-open",
                            "cross",
                            "x"
                        ],
                        "description": "Sets the marker symbol type.",
                        "dflt": "circle",
                        "arrayOk": true,
                        "valType": "enumerated",
                        "role": "style"
                    },
                    "cmin": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "colorscale": {
                        "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use cmin and cmax",
                        "role": "style",
                        "valType": "colorscale"
                    },
                    "cmax": {
                        "dflt": null,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.",
                        "role": "info",
                        "valType": "number"
                    },
                    "showscale": {
                        "dflt": false,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "opacity": {
                        "role": "style",
                        "description": "Sets the marker opacity. Note that the marker opacity for scatter3d traces must be a scalar value for performance reasons. To set a blending opacity value (i.e. which is not transparent), set *marker.color* to an rgba color and use its alpha channel.",
                        "max": 1,
                        "arrayOk": false,
                        "valType": "number",
                        "min": 0
                    },
                    "sizemode": {
                        "dflt": "diameter",
                        "values": [
                            "diameter",
                            "area"
                        ],
                        "description": "Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object",
                    "color": {
                        "arrayOk": true,
                        "description": "Sets the marker color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "line": {
                        "reversescale": {
                            "dflt": false,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "width": {
                            "arrayOk": false,
                            "min": 0,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "valType": "number",
                            "role": "style"
                        },
                        "colorscale": {
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.",
                            "role": "style",
                            "valType": "colorscale"
                        },
                        "colorsrc": {
                            "description": "Sets the source reference on plot.ly for  color .",
                            "role": "info",
                            "valType": "string"
                        },
                        "role": "object",
                        "cauto": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.",
                            "role": "style",
                            "valType": "boolean"
                        },
                        "color": {
                            "arrayOk": true,
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "valType": "color"
                        },
                        "cmin": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "cmax": {
                            "dflt": null,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.",
                            "role": "info",
                            "valType": "number"
                        },
                        "autocolorscale": {
                            "dflt": true,
                            "description": "Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.",
                            "role": "style",
                            "valType": "boolean"
                        }
                    },
                    "symbolsrc": {
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info",
                        "valType": "string"
                    },
                    "autocolorscale": {
                        "dflt": true,
                        "description": "Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.",
                        "role": "style",
                        "valType": "boolean"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "dflt": "",
                    "arrayOk": true,
                    "description": "Sets text elements associated with each (x,y,z) triplet. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y,z) coordinates.",
                    "role": "info",
                    "valType": "string"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "zsrc": {
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info",
                    "valType": "string"
                },
                "error_z": {
                    "copy_zstyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "arrayminussrc": {
                        "description": "Sets the source reference on plot.ly for  arrayminus .",
                        "role": "info",
                        "valType": "string"
                    },
                    "width": {
                        "description": "Sets the width (in px) of the cross-bar at both ends of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "array": {
                        "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "arraysrc": {
                        "description": "Sets the source reference on plot.ly for  array .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symmetric": {
                        "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "type": {
                        "values": [
                            "percent",
                            "constant",
                            "sqrt",
                            "data"
                        ],
                        "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "traceref": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "valueminus": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "value": {
                        "dflt": 10,
                        "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    },
                    "copy_ystyle": {
                        "role": "style",
                        "valType": "boolean"
                    },
                    "tracerefminus": {
                        "dflt": 0,
                        "role": "info",
                        "valType": "integer",
                        "min": 0
                    },
                    "color": {
                        "description": "Sets the stoke color of the error bars.",
                        "role": "style",
                        "valType": "color"
                    },
                    "arrayminus": {
                        "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "thickness": {
                        "dflt": 2,
                        "description": "Sets the thickness (in px) of the error bars.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "_deprecated": {
                        "opacity": {
                            "description": "Obsolete. Use the alpha channel in error bar `color` to set the opacity.",
                            "role": "style",
                            "valType": "number"
                        }
                    },
                    "visible": {
                        "description": "Determines whether or not this set of error bars is visible.",
                        "role": "info",
                        "valType": "boolean"
                    },
                    "role": "object"
                },
                "surfacecolor": {
                    "description": "Sets the surface fill color.",
                    "role": "style",
                    "valType": "color"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "scatter3d",
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "y": {
                    "description": "Sets the y coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "surfaceaxis": {
                    "dflt": -1,
                    "values": [
                        -1,
                        0,
                        1,
                        2
                    ],
                    "description": "If *-1*, the scatter points are not fill with a surface If *0*, *1*, *2*, the scatter points are filled with a Delaunay surface about the x, y, z respectively.",
                    "role": "info",
                    "valType": "enumerated"
                },
                "line": {
                    "color": {
                        "description": "Sets the line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "width": {
                        "dflt": 2,
                        "description": "Sets the line width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "dash": {
                        "dflt": "solid",
                        "values": [
                            "solid",
                            "dot",
                            "dash",
                            "longdash",
                            "dashdot",
                            "longdashdot"
                        ],
                        "description": "Sets the style of the lines. Set to a dash string type or a dash length in px.",
                        "role": "style",
                        "valType": "string"
                    },
                    "role": "object"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                }
            }
        },
        "box": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "fillcolor": {
                    "description": "Sets the fill color.",
                    "role": "style",
                    "valType": "color"
                },
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "x0": {
                    "description": "Sets the x coordinate of the box. See overview for more info.",
                    "role": "info",
                    "valType": "any"
                },
                "jitter": {
                    "max": 1,
                    "description": "Sets the amount of jitter in the sample points drawn. If *0*, the sample points align along the distribution axis. If *1*, the sample points are drawn in a random jitter of width equal to the width of the box(es).",
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "x": {
                    "description": "Sets the x sample data or coordinates. See overview for more info.",
                    "role": "data",
                    "valType": "data_array"
                },
                "line": {
                    "color": {
                        "description": "Sets the color of line bounding the box(es).",
                        "role": "style",
                        "valType": "color"
                    },
                    "width": {
                        "dflt": 2,
                        "description": "Sets the width (in px) of line bounding the box(es).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "role": "object"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "marker": {
                    "outliercolor": {
                        "dflt": "rgba(0, 0, 0, 0)",
                        "description": "Sets the color of the outlier sample points.",
                        "role": "style",
                        "valType": "color"
                    },
                    "opacity": {
                        "arrayOk": false,
                        "role": "style",
                        "dflt": 1,
                        "max": 1,
                        "description": "Sets the marker opacity.",
                        "valType": "number",
                        "min": 0
                    },
                    "role": "object",
                    "size": {
                        "role": "style",
                        "dflt": 6,
                        "arrayOk": false,
                        "description": "Sets the marker size (in px).",
                        "valType": "number",
                        "min": 0
                    },
                    "color": {
                        "arrayOk": false,
                        "description": "Sets the marker color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "line": {
                        "color": {
                            "dflt": "#444",
                            "arrayOk": false,
                            "description": "Sets the color of the lines bounding the marker points.",
                            "role": "style",
                            "valType": "color"
                        },
                        "width": {
                            "role": "style",
                            "dflt": 0,
                            "arrayOk": false,
                            "description": "Sets the width (in px) of the lines bounding the marker points.",
                            "valType": "number",
                            "min": 0
                        },
                        "outlierwidth": {
                            "dflt": 1,
                            "description": "Sets the border line width (in px) of the outlier sample points.",
                            "role": "style",
                            "valType": "number",
                            "min": 0
                        },
                        "outliercolor": {
                            "description": "Sets the border line color of the outlier sample points. Defaults to marker.color",
                            "role": "style",
                            "valType": "color"
                        },
                        "role": "object"
                    },
                    "symbol": {
                        "values": [
                            0,
                            "circle",
                            100,
                            "circle-open",
                            200,
                            "circle-dot",
                            300,
                            "circle-open-dot",
                            1,
                            "square",
                            101,
                            "square-open",
                            201,
                            "square-dot",
                            301,
                            "square-open-dot",
                            2,
                            "diamond",
                            102,
                            "diamond-open",
                            202,
                            "diamond-dot",
                            302,
                            "diamond-open-dot",
                            3,
                            "cross",
                            103,
                            "cross-open",
                            203,
                            "cross-dot",
                            303,
                            "cross-open-dot",
                            4,
                            "x",
                            104,
                            "x-open",
                            204,
                            "x-dot",
                            304,
                            "x-open-dot",
                            5,
                            "triangle-up",
                            105,
                            "triangle-up-open",
                            205,
                            "triangle-up-dot",
                            305,
                            "triangle-up-open-dot",
                            6,
                            "triangle-down",
                            106,
                            "triangle-down-open",
                            206,
                            "triangle-down-dot",
                            306,
                            "triangle-down-open-dot",
                            7,
                            "triangle-left",
                            107,
                            "triangle-left-open",
                            207,
                            "triangle-left-dot",
                            307,
                            "triangle-left-open-dot",
                            8,
                            "triangle-right",
                            108,
                            "triangle-right-open",
                            208,
                            "triangle-right-dot",
                            308,
                            "triangle-right-open-dot",
                            9,
                            "triangle-ne",
                            109,
                            "triangle-ne-open",
                            209,
                            "triangle-ne-dot",
                            309,
                            "triangle-ne-open-dot",
                            10,
                            "triangle-se",
                            110,
                            "triangle-se-open",
                            210,
                            "triangle-se-dot",
                            310,
                            "triangle-se-open-dot",
                            11,
                            "triangle-sw",
                            111,
                            "triangle-sw-open",
                            211,
                            "triangle-sw-dot",
                            311,
                            "triangle-sw-open-dot",
                            12,
                            "triangle-nw",
                            112,
                            "triangle-nw-open",
                            212,
                            "triangle-nw-dot",
                            312,
                            "triangle-nw-open-dot",
                            13,
                            "pentagon",
                            113,
                            "pentagon-open",
                            213,
                            "pentagon-dot",
                            313,
                            "pentagon-open-dot",
                            14,
                            "hexagon",
                            114,
                            "hexagon-open",
                            214,
                            "hexagon-dot",
                            314,
                            "hexagon-open-dot",
                            15,
                            "hexagon2",
                            115,
                            "hexagon2-open",
                            215,
                            "hexagon2-dot",
                            315,
                            "hexagon2-open-dot",
                            16,
                            "octagon",
                            116,
                            "octagon-open",
                            216,
                            "octagon-dot",
                            316,
                            "octagon-open-dot",
                            17,
                            "star",
                            117,
                            "star-open",
                            217,
                            "star-dot",
                            317,
                            "star-open-dot",
                            18,
                            "hexagram",
                            118,
                            "hexagram-open",
                            218,
                            "hexagram-dot",
                            318,
                            "hexagram-open-dot",
                            19,
                            "star-triangle-up",
                            119,
                            "star-triangle-up-open",
                            219,
                            "star-triangle-up-dot",
                            319,
                            "star-triangle-up-open-dot",
                            20,
                            "star-triangle-down",
                            120,
                            "star-triangle-down-open",
                            220,
                            "star-triangle-down-dot",
                            320,
                            "star-triangle-down-open-dot",
                            21,
                            "star-square",
                            121,
                            "star-square-open",
                            221,
                            "star-square-dot",
                            321,
                            "star-square-open-dot",
                            22,
                            "star-diamond",
                            122,
                            "star-diamond-open",
                            222,
                            "star-diamond-dot",
                            322,
                            "star-diamond-open-dot",
                            23,
                            "diamond-tall",
                            123,
                            "diamond-tall-open",
                            223,
                            "diamond-tall-dot",
                            323,
                            "diamond-tall-open-dot",
                            24,
                            "diamond-wide",
                            124,
                            "diamond-wide-open",
                            224,
                            "diamond-wide-dot",
                            324,
                            "diamond-wide-open-dot",
                            25,
                            "hourglass",
                            125,
                            "hourglass-open",
                            26,
                            "bowtie",
                            126,
                            "bowtie-open",
                            27,
                            "circle-cross",
                            127,
                            "circle-cross-open",
                            28,
                            "circle-x",
                            128,
                            "circle-x-open",
                            29,
                            "square-cross",
                            129,
                            "square-cross-open",
                            30,
                            "square-x",
                            130,
                            "square-x-open",
                            31,
                            "diamond-cross",
                            131,
                            "diamond-cross-open",
                            32,
                            "diamond-x",
                            132,
                            "diamond-x-open",
                            33,
                            "cross-thin",
                            133,
                            "cross-thin-open",
                            34,
                            "x-thin",
                            134,
                            "x-thin-open",
                            35,
                            "asterisk",
                            135,
                            "asterisk-open",
                            36,
                            "hash",
                            136,
                            "hash-open",
                            236,
                            "hash-dot",
                            336,
                            "hash-open-dot",
                            37,
                            "y-up",
                            137,
                            "y-up-open",
                            38,
                            "y-down",
                            138,
                            "y-down-open",
                            39,
                            "y-left",
                            139,
                            "y-left-open",
                            40,
                            "y-right",
                            140,
                            "y-right-open",
                            41,
                            "line-ew",
                            141,
                            "line-ew-open",
                            42,
                            "line-ns",
                            142,
                            "line-ns-open",
                            43,
                            "line-ne",
                            143,
                            "line-ne-open",
                            44,
                            "line-nw",
                            144,
                            "line-nw-open"
                        ],
                        "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.",
                        "dflt": "circle",
                        "arrayOk": false,
                        "valType": "enumerated",
                        "role": "style"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "pointpos": {
                    "max": 2,
                    "description": "Sets the position of the sample points in relation to the box(es). If *0*, the sample points are places over the center of the box(es). Positive (negative) values correspond to positions to the right (left) for vertical boxes and above (below) for horizontal boxes",
                    "role": "style",
                    "valType": "number",
                    "min": -2
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "boxmean": {
                    "dflt": false,
                    "values": [
                        true,
                        "sd",
                        false
                    ],
                    "description": "If *true*, the mean of the box(es)' underlying distribution is drawn as a dashed line inside the box(es). If *sd* the standard deviation is also drawn.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "box",
                "boxpoints": {
                    "dflt": "outliers",
                    "values": [
                        "all",
                        "outliers",
                        "suspectedoutliers",
                        false
                    ],
                    "description": "If *outliers*, only the sample points lying outside the whiskers are shown If *suspectedoutliers*, the outlier points are shown and points either less than 4*Q1-3*Q3 or greater than 4*Q3-3*Q1 are highlighted (see `outliercolor`) If *all*, all sample points are shown If *false*, only the box(es) are shown with no sample points",
                    "role": "style",
                    "valType": "enumerated"
                },
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "y0": {
                    "description": "Sets the y coordinate of the box. See overview for more info.",
                    "role": "info",
                    "valType": "any"
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "y": {
                    "description": "Sets the y sample data or coordinates. See overview for more info.",
                    "role": "data",
                    "valType": "data_array"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "orientation": {
                    "values": [
                        "v",
                        "h"
                    ],
                    "description": "Sets the orientation of the box(es). If *v* (*h*), the distribution is visualized along the vertical (horizontal).",
                    "role": "style",
                    "valType": "enumerated"
                },
                "whiskerwidth": {
                    "role": "style",
                    "dflt": 0.5,
                    "max": 1,
                    "description": "Sets the width of the whiskers relative to the box' width. For example, with 1, the whiskers are as wide as the box(es).",
                    "valType": "number",
                    "min": 0
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                }
            },
            "layoutAttributes": {
                "boxgap": {
                    "role": "style",
                    "dflt": 0.3,
                    "max": 1,
                    "description": "Sets the gap (in plot fraction) between boxes of adjacent location coordinates.",
                    "valType": "number",
                    "min": 0
                },
                "boxgroupgap": {
                    "role": "style",
                    "dflt": 0.3,
                    "max": 1,
                    "description": "Sets the gap (in plot fraction) between boxes of the same location coordinate.",
                    "valType": "number",
                    "min": 0
                },
                "boxmode": {
                    "dflt": "overlay",
                    "values": [
                        "group",
                        "overlay"
                    ],
                    "description": "Determines how boxes at the same location coordinate are displayed on the graph. If *group*, the boxes are plotted next to one another centered around the shared location. If *overlay*, the boxes are plotted over one another, you might need to set *opacity* to see them multiple boxes.",
                    "role": "info",
                    "valType": "enumerated"
                }
            },
            "description": "In vertical (horizontal) box plots, statistics are computed using `y` (`x`) values. By supplying an `x` (`y`) array, one box per distinct x (y) value is drawn If no `x` (`y`) {array} is provided, a single box is drawn. That box position is then positioned with with `name` or with `x0` (`y0`) if provided. Each box spans from quartile 1 (Q1) to quartile 3 (Q3). The second quartile (Q2) is marked by a line inside the box. By default, the whiskers correspond to the box' edges +/- 1.5 times the interquartile range (IQR = Q3-Q1), see *boxpoints* for other options."
        },
        "heatmap": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "connectgaps": {
                    "dflt": false,
                    "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.",
                    "role": "info",
                    "valType": "boolean"
                },
                "colorscale": {
                    "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax",
                    "role": "style",
                    "valType": "colorscale"
                },
                "reversescale": {
                    "dflt": false,
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "valType": "boolean"
                },
                "xtype": {
                    "values": [
                        "array",
                        "scaled"
                    ],
                    "description": "If *array*, the heatmap's x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap's x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "colorbar": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "outlinecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "y": {
                        "role": "style",
                        "dflt": 0.5,
                        "max": 3,
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "len": {
                        "dflt": 1,
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "bgcolor": {
                        "dflt": "rgba(0,0,0,0)",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ypad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this color bar's title font."
                    },
                    "title": {
                        "dflt": "Click to enter colorscale title",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ],
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thickness": {
                        "dflt": 30,
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "ticks": {
                        "dflt": "",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "x": {
                        "role": "style",
                        "dflt": 1.02,
                        "max": 3,
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "xpad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ],
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titleside": {
                        "dflt": "top",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ],
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "bordercolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "outlinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "borderwidth": {
                        "dflt": 0,
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object"
                },
                "x0": {
                    "dflt": 0,
                    "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "zauto": {
                    "dflt": true,
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "valType": "boolean"
                },
                "dx": {
                    "dflt": 1,
                    "description": "Sets the x coordinate step. See `x0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "transpose": {
                    "dflt": false,
                    "description": "Transposes the z data.",
                    "role": "info",
                    "valType": "boolean"
                },
                "x": {
                    "description": "Sets the x coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "zmax": {
                    "dflt": null,
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "z": {
                    "description": "Sets the z data.",
                    "role": "data",
                    "valType": "data_array"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "description": "Sets the text elements associated with each z value.",
                    "role": "data",
                    "valType": "data_array"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "zsrc": {
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info",
                    "valType": "string"
                },
                "zmin": {
                    "dflt": null,
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "heatmap",
                "zsmooth": {
                    "dflt": false,
                    "values": [
                        "fast",
                        "best",
                        false
                    ],
                    "description": "Picks a smoothing algorithm use to smooth `z` data.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "ytype": {
                    "values": [
                        "array",
                        "scaled"
                    ],
                    "description": "If *array*, the heatmap's y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap's y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)",
                    "role": "info",
                    "valType": "enumerated"
                },
                "y0": {
                    "dflt": 0,
                    "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.",
                    "role": "info",
                    "valType": "any"
                },
                "dy": {
                    "dflt": 1,
                    "description": "Sets the y coordinate step. See `y0` for more info.",
                    "role": "info",
                    "valType": "number"
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "y": {
                    "description": "Sets the y coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "showscale": {
                    "dflt": true,
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "valType": "boolean"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "autocolorscale": {
                    "dflt": false,
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "valType": "boolean"
                }
            },
            "description": "The data that describes the heatmap value-to-color mapping is set in `z`. Data in `z` can either be a {2D array} of values (ragged or not) or a 1D array of values. In the case where `z` is a {2D array}, say that `z` has N rows and M columns. Then, by default, the resulting heatmap will have N partitions along the y axis and M partitions along the x axis. In other words, the i-th row/ j-th column cell in `z` is mapped to the i-th partition of the y axis (starting from the bottom of the plot) and the j-th partition of the x-axis (starting from the left of the plot). This behavior can be flipped by using `transpose`. Moreover, `x` (`y`) can be provided with M or M+1 (N or N+1) elements. If M (N), then the coordinates correspond to the center of the heatmap cells and the cells have equal width. If M+1 (N+1), then the coordinates correspond to the edges of the heatmap cells. In the case where `z` is a 1D {array}, the x and y coordinates must be provided in `x` and `y` respectively to form data triplets."
        },
        "histogram2d": {
            "hrName": "histogram_2d",
            "description": "The sample data from which statistics are computed is set in `x` and `y` (where `x` and `y` represent marginal distributions, binning is set in `xbins` and `ybins` in this case) or `z` (where `z` represent the 2D distribution and binning set, binning is set by `x` and `y` in this case). The resulting distribution is visualized as a heatmap.",
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "colorscale": {
                    "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax",
                    "role": "style",
                    "valType": "colorscale"
                },
                "reversescale": {
                    "dflt": false,
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "valType": "boolean"
                },
                "autobiny": {
                    "dflt": true,
                    "description": "Determines whether or not the y axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "valType": "boolean"
                },
                "y": {
                    "description": "Sets the sample data to be binned on the y axis.",
                    "role": "data",
                    "valType": "data_array"
                },
                "xaxis": {
                    "dflt": "x",
                    "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "colorbar": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "outlinecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "y": {
                        "role": "style",
                        "dflt": 0.5,
                        "max": 3,
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "len": {
                        "dflt": 1,
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "bgcolor": {
                        "dflt": "rgba(0,0,0,0)",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ypad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this color bar's title font."
                    },
                    "title": {
                        "dflt": "Click to enter colorscale title",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ],
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thickness": {
                        "dflt": 30,
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "ticks": {
                        "dflt": "",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "x": {
                        "role": "style",
                        "dflt": 1.02,
                        "max": 3,
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "xpad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ],
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titleside": {
                        "dflt": "top",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ],
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "bordercolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "outlinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "borderwidth": {
                        "dflt": 0,
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object"
                },
                "xbins": {
                    "start": {
                        "dflt": null,
                        "description": "Sets the starting value for the x axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "end": {
                        "dflt": null,
                        "description": "Sets the end value for the x axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "size": {
                        "dflt": 1,
                        "description": "Sets the step in-between value each x axis bin.",
                        "role": "style",
                        "valType": "any"
                    }
                },
                "ybins": {
                    "start": {
                        "dflt": null,
                        "description": "Sets the starting value for the y axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "end": {
                        "dflt": null,
                        "description": "Sets the end value for the y axis bins.",
                        "role": "style",
                        "valType": "number"
                    },
                    "role": "object",
                    "size": {
                        "dflt": 1,
                        "description": "Sets the step in-between value each y axis bin.",
                        "role": "style",
                        "valType": "any"
                    }
                },
                "zauto": {
                    "dflt": true,
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "valType": "boolean"
                },
                "showscale": {
                    "dflt": true,
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "valType": "boolean"
                },
                "x": {
                    "description": "Sets the sample data to be binned on the x axis.",
                    "role": "data",
                    "valType": "data_array"
                },
                "zmax": {
                    "dflt": null,
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "histnorm": {
                    "dflt": "",
                    "values": [
                        "",
                        "percent",
                        "probability",
                        "density",
                        "probability density"
                    ],
                    "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).",
                    "role": "style",
                    "valType": "enumerated"
                },
                "z": {
                    "description": "Sets the aggregation data.",
                    "role": "data",
                    "valType": "data_array"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "marker": {
                    "color": {
                        "description": "Sets the aggregation data.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object"
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "zsrc": {
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info",
                    "valType": "string"
                },
                "zmin": {
                    "dflt": null,
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "nbinsy": {
                    "dflt": 0,
                    "description": "Sets the number of y axis bins.",
                    "role": "style",
                    "valType": "integer",
                    "min": 0
                },
                "type": "histogram2d",
                "zsmooth": {
                    "dflt": false,
                    "values": [
                        "fast",
                        "best",
                        false
                    ],
                    "description": "Picks a smoothing algorithm use to smooth `z` data.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "nbinsx": {
                    "dflt": 0,
                    "description": "Sets the number of x axis bins.",
                    "role": "style",
                    "valType": "integer",
                    "min": 0
                },
                "yaxis": {
                    "dflt": "y",
                    "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.",
                    "role": "info",
                    "valType": "axisid"
                },
                "histfunc": {
                    "dflt": "count",
                    "values": [
                        "count",
                        "sum",
                        "avg",
                        "min",
                        "max"
                    ],
                    "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.",
                    "role": "style",
                    "valType": "enumerated"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "autobinx": {
                    "dflt": true,
                    "description": "Determines whether or not the x axis bin attributes are picked by an algorithm.",
                    "role": "style",
                    "valType": "boolean"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "autocolorscale": {
                    "dflt": false,
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "valType": "boolean"
                }
            }
        },
        "area": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "marker": {
                    "opacity": {
                        "role": "style",
                        "description": "Sets the marker opacity.",
                        "max": 1,
                        "arrayOk": true,
                        "valType": "number",
                        "min": 0
                    },
                    "colorsrc": {
                        "description": "Sets the source reference on plot.ly for  color .",
                        "role": "info",
                        "valType": "string"
                    },
                    "sizesrc": {
                        "description": "Sets the source reference on plot.ly for  size .",
                        "role": "info",
                        "valType": "string"
                    },
                    "role": "object",
                    "size": {
                        "role": "style",
                        "dflt": 6,
                        "arrayOk": true,
                        "description": "Sets the marker size (in px).",
                        "valType": "number",
                        "min": 0
                    },
                    "color": {
                        "arrayOk": true,
                        "description": "Sets the marker color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "opacitysrc": {
                        "description": "Sets the source reference on plot.ly for  opacity .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symbolsrc": {
                        "description": "Sets the source reference on plot.ly for  symbol .",
                        "role": "info",
                        "valType": "string"
                    },
                    "symbol": {
                        "values": [
                            0,
                            "circle",
                            100,
                            "circle-open",
                            200,
                            "circle-dot",
                            300,
                            "circle-open-dot",
                            1,
                            "square",
                            101,
                            "square-open",
                            201,
                            "square-dot",
                            301,
                            "square-open-dot",
                            2,
                            "diamond",
                            102,
                            "diamond-open",
                            202,
                            "diamond-dot",
                            302,
                            "diamond-open-dot",
                            3,
                            "cross",
                            103,
                            "cross-open",
                            203,
                            "cross-dot",
                            303,
                            "cross-open-dot",
                            4,
                            "x",
                            104,
                            "x-open",
                            204,
                            "x-dot",
                            304,
                            "x-open-dot",
                            5,
                            "triangle-up",
                            105,
                            "triangle-up-open",
                            205,
                            "triangle-up-dot",
                            305,
                            "triangle-up-open-dot",
                            6,
                            "triangle-down",
                            106,
                            "triangle-down-open",
                            206,
                            "triangle-down-dot",
                            306,
                            "triangle-down-open-dot",
                            7,
                            "triangle-left",
                            107,
                            "triangle-left-open",
                            207,
                            "triangle-left-dot",
                            307,
                            "triangle-left-open-dot",
                            8,
                            "triangle-right",
                            108,
                            "triangle-right-open",
                            208,
                            "triangle-right-dot",
                            308,
                            "triangle-right-open-dot",
                            9,
                            "triangle-ne",
                            109,
                            "triangle-ne-open",
                            209,
                            "triangle-ne-dot",
                            309,
                            "triangle-ne-open-dot",
                            10,
                            "triangle-se",
                            110,
                            "triangle-se-open",
                            210,
                            "triangle-se-dot",
                            310,
                            "triangle-se-open-dot",
                            11,
                            "triangle-sw",
                            111,
                            "triangle-sw-open",
                            211,
                            "triangle-sw-dot",
                            311,
                            "triangle-sw-open-dot",
                            12,
                            "triangle-nw",
                            112,
                            "triangle-nw-open",
                            212,
                            "triangle-nw-dot",
                            312,
                            "triangle-nw-open-dot",
                            13,
                            "pentagon",
                            113,
                            "pentagon-open",
                            213,
                            "pentagon-dot",
                            313,
                            "pentagon-open-dot",
                            14,
                            "hexagon",
                            114,
                            "hexagon-open",
                            214,
                            "hexagon-dot",
                            314,
                            "hexagon-open-dot",
                            15,
                            "hexagon2",
                            115,
                            "hexagon2-open",
                            215,
                            "hexagon2-dot",
                            315,
                            "hexagon2-open-dot",
                            16,
                            "octagon",
                            116,
                            "octagon-open",
                            216,
                            "octagon-dot",
                            316,
                            "octagon-open-dot",
                            17,
                            "star",
                            117,
                            "star-open",
                            217,
                            "star-dot",
                            317,
                            "star-open-dot",
                            18,
                            "hexagram",
                            118,
                            "hexagram-open",
                            218,
                            "hexagram-dot",
                            318,
                            "hexagram-open-dot",
                            19,
                            "star-triangle-up",
                            119,
                            "star-triangle-up-open",
                            219,
                            "star-triangle-up-dot",
                            319,
                            "star-triangle-up-open-dot",
                            20,
                            "star-triangle-down",
                            120,
                            "star-triangle-down-open",
                            220,
                            "star-triangle-down-dot",
                            320,
                            "star-triangle-down-open-dot",
                            21,
                            "star-square",
                            121,
                            "star-square-open",
                            221,
                            "star-square-dot",
                            321,
                            "star-square-open-dot",
                            22,
                            "star-diamond",
                            122,
                            "star-diamond-open",
                            222,
                            "star-diamond-dot",
                            322,
                            "star-diamond-open-dot",
                            23,
                            "diamond-tall",
                            123,
                            "diamond-tall-open",
                            223,
                            "diamond-tall-dot",
                            323,
                            "diamond-tall-open-dot",
                            24,
                            "diamond-wide",
                            124,
                            "diamond-wide-open",
                            224,
                            "diamond-wide-dot",
                            324,
                            "diamond-wide-open-dot",
                            25,
                            "hourglass",
                            125,
                            "hourglass-open",
                            26,
                            "bowtie",
                            126,
                            "bowtie-open",
                            27,
                            "circle-cross",
                            127,
                            "circle-cross-open",
                            28,
                            "circle-x",
                            128,
                            "circle-x-open",
                            29,
                            "square-cross",
                            129,
                            "square-cross-open",
                            30,
                            "square-x",
                            130,
                            "square-x-open",
                            31,
                            "diamond-cross",
                            131,
                            "diamond-cross-open",
                            32,
                            "diamond-x",
                            132,
                            "diamond-x-open",
                            33,
                            "cross-thin",
                            133,
                            "cross-thin-open",
                            34,
                            "x-thin",
                            134,
                            "x-thin-open",
                            35,
                            "asterisk",
                            135,
                            "asterisk-open",
                            36,
                            "hash",
                            136,
                            "hash-open",
                            236,
                            "hash-dot",
                            336,
                            "hash-open-dot",
                            37,
                            "y-up",
                            137,
                            "y-up-open",
                            38,
                            "y-down",
                            138,
                            "y-down-open",
                            39,
                            "y-left",
                            139,
                            "y-left-open",
                            40,
                            "y-right",
                            140,
                            "y-right-open",
                            41,
                            "line-ew",
                            141,
                            "line-ew-open",
                            42,
                            "line-ns",
                            142,
                            "line-ns-open",
                            43,
                            "line-ne",
                            143,
                            "line-ne-open",
                            44,
                            "line-nw",
                            144,
                            "line-nw-open"
                        ],
                        "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.",
                        "dflt": "circle",
                        "arrayOk": true,
                        "valType": "enumerated",
                        "role": "style"
                    }
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "t": {
                    "description": "For polar chart only.Sets the angular coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "tsrc": {
                    "description": "Sets the source reference on plot.ly for  t .",
                    "role": "info",
                    "valType": "string"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "area",
                "r": {
                    "description": "For polar chart only.Sets the radial coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "opacity": {
                    "role": "style",
                    "dflt": 1,
                    "max": 1,
                    "description": "Sets the opacity of the trace.",
                    "valType": "number",
                    "min": 0
                },
                "rsrc": {
                    "description": "Sets the source reference on plot.ly for  r .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                }
            }
        },
        "surface": {
            "attributes": {
                "uid": {
                    "dflt": "",
                    "role": "info",
                    "valType": "string"
                },
                "colorscale": {
                    "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax",
                    "role": "style",
                    "valType": "colorscale"
                },
                "reversescale": {
                    "dflt": false,
                    "description": "Reverses the colorscale.",
                    "role": "style",
                    "valType": "boolean"
                },
                "legendgroup": {
                    "dflt": "",
                    "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.",
                    "role": "info",
                    "valType": "string"
                },
                "cmin": {
                    "dflt": null,
                    "description": "Sets the lower bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "colorbar": {
                    "tickwidth": {
                        "dflt": 1,
                        "description": "Sets the tick width (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showtickprefix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "outlinecolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "y": {
                        "role": "style",
                        "dflt": 0.5,
                        "max": 3,
                        "description": "Sets the y position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "showticksuffix": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "Same as `showtickprefix` but for tick suffixes.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tickfont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets the tick font."
                    },
                    "len": {
                        "dflt": 1,
                        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "showexponent": {
                        "dflt": "all",
                        "values": [
                            "all",
                            "first",
                            "last",
                            "none"
                        ],
                        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "tick0": {
                        "dflt": 0,
                        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.",
                        "role": "style",
                        "valType": "number"
                    },
                    "ticktext": {
                        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "ticklen": {
                        "dflt": 5,
                        "description": "Sets the tick length (in px).",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "bgcolor": {
                        "dflt": "rgba(0,0,0,0)",
                        "description": "Sets the color of padded area.",
                        "role": "style",
                        "valType": "color"
                    },
                    "ypad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the y direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "ticktextsrc": {
                        "description": "Sets the source reference on plot.ly for  ticktext .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titlefont": {
                        "color": {
                            "role": "style",
                            "valType": "color"
                        },
                        "family": {
                            "noBlank": true,
                            "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                            "role": "style",
                            "valType": "string",
                            "strict": true
                        },
                        "size": {
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "role": "object",
                        "description": "Sets this color bar's title font."
                    },
                    "title": {
                        "dflt": "Click to enter colorscale title",
                        "description": "Sets the title of the color bar.",
                        "role": "info",
                        "valType": "string"
                    },
                    "tickmode": {
                        "values": [
                            "auto",
                            "linear",
                            "array"
                        ],
                        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "xanchor": {
                        "dflt": "left",
                        "values": [
                            "left",
                            "center",
                            "right"
                        ],
                        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thickness": {
                        "dflt": 30,
                        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickangle": {
                        "dflt": "auto",
                        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.",
                        "role": "style",
                        "valType": "angle"
                    },
                    "dtick": {
                        "dflt": 1,
                        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.",
                        "role": "style",
                        "valType": "any"
                    },
                    "tickformat": {
                        "dflt": "",
                        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickcolor": {
                        "dflt": "#444",
                        "description": "Sets the tick color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "lenmode": {
                        "dflt": "fraction",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.",
                        "role": "info",
                        "valType": "enumerated"
                    },
                    "ticks": {
                        "dflt": "",
                        "values": [
                            "outside",
                            "inside",
                            ""
                        ],
                        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "thicknessmode": {
                        "dflt": "pixels",
                        "values": [
                            "fraction",
                            "pixels"
                        ],
                        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "x": {
                        "role": "style",
                        "dflt": 1.02,
                        "max": 3,
                        "description": "Sets the x position of the color bar (in plot fraction).",
                        "valType": "number",
                        "min": -2
                    },
                    "xpad": {
                        "dflt": 10,
                        "description": "Sets the amount of padding (in px) along the x direction.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "nticks": {
                        "dflt": 0,
                        "description": "Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.",
                        "role": "style",
                        "valType": "integer",
                        "min": 0
                    },
                    "yanchor": {
                        "dflt": "middle",
                        "values": [
                            "top",
                            "middle",
                            "bottom"
                        ],
                        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "ticksuffix": {
                        "dflt": "",
                        "description": "Sets a tick label suffix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvalssrc": {
                        "description": "Sets the source reference on plot.ly for  tickvals .",
                        "role": "info",
                        "valType": "string"
                    },
                    "titleside": {
                        "dflt": "top",
                        "values": [
                            "right",
                            "top",
                            "bottom"
                        ],
                        "description": "Determines the location of the colorbar title with respect to the color bar.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "bordercolor": {
                        "dflt": "#444",
                        "description": "Sets the axis line color.",
                        "role": "style",
                        "valType": "color"
                    },
                    "showticklabels": {
                        "dflt": true,
                        "description": "Determines whether or not the tick labels are drawn.",
                        "role": "style",
                        "valType": "boolean"
                    },
                    "outlinewidth": {
                        "dflt": 1,
                        "description": "Sets the width (in px) of the axis line.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "tickprefix": {
                        "dflt": "",
                        "description": "Sets a tick label prefix.",
                        "role": "style",
                        "valType": "string"
                    },
                    "tickvals": {
                        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.",
                        "role": "data",
                        "valType": "data_array"
                    },
                    "borderwidth": {
                        "dflt": 0,
                        "description": "Sets the width (in px) or the border enclosing this color bar.",
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "exponentformat": {
                        "dflt": "B",
                        "values": [
                            "none",
                            "e",
                            "E",
                            "power",
                            "SI",
                            "B"
                        ],
                        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.",
                        "role": "style",
                        "valType": "enumerated"
                    },
                    "role": "object"
                },
                "cmax": {
                    "dflt": null,
                    "description": "Sets the upper bound of color domain.",
                    "role": "info",
                    "valType": "number"
                },
                "surfacecolorsrc": {
                    "description": "Sets the source reference on plot.ly for  surfacecolor .",
                    "role": "info",
                    "valType": "string"
                },
                "showscale": {
                    "dflt": true,
                    "description": "Determines whether or not a colorbar is displayed for this trace.",
                    "role": "info",
                    "valType": "boolean"
                },
                "x": {
                    "description": "Sets the x coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "z": {
                    "description": "Sets the z coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "hidesurface": {
                    "dflt": false,
                    "role": "info",
                    "valType": "boolean"
                },
                "hoverinfo": {
                    "flags": [
                        "x",
                        "y",
                        "z",
                        "text",
                        "name"
                    ],
                    "extras": [
                        "all",
                        "none"
                    ],
                    "description": "Determines which trace information appear on hover.",
                    "dflt": "all",
                    "valType": "flaglist",
                    "role": "info"
                },
                "scene": {
                    "dflt": "scene",
                    "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.",
                    "role": "info",
                    "valType": "sceneid"
                },
                "stream": {
                    "token": {
                        "noBlank": true,
                        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.",
                        "role": "info",
                        "valType": "string",
                        "strict": true
                    },
                    "role": "object",
                    "maxpoints": {
                        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
                        "role": "info",
                        "valType": "number",
                        "min": 0
                    }
                },
                "text": {
                    "description": "Sets the text elements associated with each z value.",
                    "role": "data",
                    "valType": "data_array"
                },
                "showlegend": {
                    "dflt": true,
                    "description": "Determines whether or not an item corresponding to this trace is shown in the legend.",
                    "role": "info",
                    "valType": "boolean"
                },
                "zsrc": {
                    "description": "Sets the source reference on plot.ly for  z .",
                    "role": "info",
                    "valType": "string"
                },
                "cauto": {
                    "dflt": true,
                    "description": "Determines the whether or not the color domain is computed with respect to the input data.",
                    "role": "info",
                    "valType": "boolean"
                },
                "surfacecolor": {
                    "description": "Sets the surface color values, used for setting a color scale independent of `z`.",
                    "role": "data",
                    "valType": "data_array"
                },
                "xsrc": {
                    "description": "Sets the source reference on plot.ly for  x .",
                    "role": "info",
                    "valType": "string"
                },
                "name": {
                    "description": "Sets the trace name. The trace name appear as the legend item and on hover.",
                    "role": "info",
                    "valType": "string"
                },
                "type": "surface",
                "opacity": {
                    "dflt": 1,
                    "max": 1,
                    "role": "style",
                    "valType": "number",
                    "min": 0
                },
                "_deprecated": {
                    "zmin": {
                        "dflt": null,
                        "description": "Obsolete. Use `cmin` instead.",
                        "role": "info",
                        "valType": "number"
                    },
                    "zmax": {
                        "dflt": null,
                        "description": "Obsolete. Use `cmax` instead.",
                        "role": "info",
                        "valType": "number"
                    },
                    "zauto": {
                        "dflt": true,
                        "description": "Obsolete. Use `cauto` instead.",
                        "role": "info",
                        "valType": "boolean"
                    }
                },
                "y": {
                    "description": "Sets the y coordinates.",
                    "role": "data",
                    "valType": "data_array"
                },
                "ysrc": {
                    "description": "Sets the source reference on plot.ly for  y .",
                    "role": "info",
                    "valType": "string"
                },
                "lighting": {
                    "roughness": {
                        "dflt": 0.5,
                        "max": 1,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "role": "object",
                    "ambient": {
                        "dflt": 0.8,
                        "max": 1,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "diffuse": {
                        "dflt": 0.8,
                        "max": 1,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "fresnel": {
                        "dflt": 0.2,
                        "max": 5,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    },
                    "specular": {
                        "dflt": 0.05,
                        "max": 2,
                        "role": "style",
                        "valType": "number",
                        "min": 0
                    }
                },
                "contours": {
                    "y": {
                        "show": {
                            "dflt": false,
                            "description": "Sets whether or not dynamic contours are shown along the y axis",
                            "role": "info",
                            "valType": "boolean"
                        },
                        "width": {
                            "dflt": 2,
                            "max": 16,
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "highlight": {
                            "dflt": false,
                            "role": "info",
                            "valType": "boolean"
                        },
                        "highlightColor": {
                            "dflt": "#000",
                            "role": "style",
                            "valType": "color"
                        },
                        "usecolormap": {
                            "dflt": false,
                            "role": "info",
                            "valType": "boolean"
                        },
                        "role": "object",
                        "project": {
                            "y": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the y axis.",
                                "role": "info",
                                "valType": "boolean"
                            },
                            "z": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the z axis.",
                                "role": "info",
                                "valType": "boolean"
                            },
                            "role": "object",
                            "x": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the x axis.",
                                "role": "info",
                                "valType": "boolean"
                            }
                        },
                        "color": {
                            "dflt": "#000",
                            "role": "style",
                            "valType": "color"
                        },
                        "highlightWidth": {
                            "dflt": 2,
                            "max": 16,
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        }
                    },
                    "z": {
                        "show": {
                            "dflt": false,
                            "description": "Sets whether or not dynamic contours are shown along the z axis",
                            "role": "info",
                            "valType": "boolean"
                        },
                        "width": {
                            "dflt": 2,
                            "max": 16,
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "highlight": {
                            "dflt": false,
                            "role": "info",
                            "valType": "boolean"
                        },
                        "highlightColor": {
                            "dflt": "#000",
                            "role": "style",
                            "valType": "color"
                        },
                        "usecolormap": {
                            "dflt": false,
                            "role": "info",
                            "valType": "boolean"
                        },
                        "role": "object",
                        "project": {
                            "y": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the y axis.",
                                "role": "info",
                                "valType": "boolean"
                            },
                            "z": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the z axis.",
                                "role": "info",
                                "valType": "boolean"
                            },
                            "role": "object",
                            "x": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the x axis.",
                                "role": "info",
                                "valType": "boolean"
                            }
                        },
                        "color": {
                            "dflt": "#000",
                            "role": "style",
                            "valType": "color"
                        },
                        "highlightWidth": {
                            "dflt": 2,
                            "max": 16,
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        }
                    },
                    "role": "object",
                    "x": {
                        "show": {
                            "dflt": false,
                            "description": "Sets whether or not dynamic contours are shown along the x axis",
                            "role": "info",
                            "valType": "boolean"
                        },
                        "width": {
                            "dflt": 2,
                            "max": 16,
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        },
                        "highlight": {
                            "dflt": false,
                            "role": "info",
                            "valType": "boolean"
                        },
                        "highlightColor": {
                            "dflt": "#000",
                            "role": "style",
                            "valType": "color"
                        },
                        "usecolormap": {
                            "dflt": false,
                            "role": "info",
                            "valType": "boolean"
                        },
                        "role": "object",
                        "project": {
                            "y": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the y axis.",
                                "role": "info",
                                "valType": "boolean"
                            },
                            "z": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the z axis.",
                                "role": "info",
                                "valType": "boolean"
                            },
                            "role": "object",
                            "x": {
                                "dflt": false,
                                "description": "Sets whether or not the dynamic contours are projected along the x axis.",
                                "role": "info",
                                "valType": "boolean"
                            }
                        },
                        "color": {
                            "dflt": "#000",
                            "role": "style",
                            "valType": "color"
                        },
                        "highlightWidth": {
                            "dflt": 2,
                            "max": 16,
                            "role": "style",
                            "valType": "number",
                            "min": 1
                        }
                    }
                },
                "textsrc": {
                    "description": "Sets the source reference on plot.ly for  text .",
                    "role": "info",
                    "valType": "string"
                },
                "visible": {
                    "dflt": true,
                    "values": [
                        true,
                        false,
                        "legendonly"
                    ],
                    "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
                    "role": "info",
                    "valType": "enumerated"
                },
                "autocolorscale": {
                    "dflt": false,
                    "description": "Determines whether or not the colorscale is picked using the sign of the input z values.",
                    "role": "style",
                    "valType": "boolean"
                }
            },
            "description": "The data the describes the coordinates of the surface is set in `z`. Data in `z` should be a {2D array}. Coordinates in `x` and `y` can either be 1D {arrays} or {2D arrays} (e.g. to graph parametric surfaces). If not provided in `x` and `y`, the x and y coordinates are assumed to be linear starting at 0 with a unit step. The color scale corresponds to the `z` values by default. For custom color scales, use `surfacecolor` which should be a {2D array}, where its bounds can be controlled using `cmin` and `cmax`."
        }
    }
}